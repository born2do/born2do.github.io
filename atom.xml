<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://born2do.github.io/atom.xml" rel="self"/>
  
  <link href="https://born2do.github.io/"/>
  <updated>2021-03-02T15:35:39.108Z</updated>
  <id>https://born2do.github.io/</id>
  
  <author>
    <name>chenhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo s 报错</title>
    <link href="https://born2do.github.io/2021/03/02/hexo-s-%E6%8A%A5%E9%94%99/"/>
    <id>https://born2do.github.io/2021/03/02/hexo-s-%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-02T06:30:00.000Z</published>
    <updated>2021-03-02T15:35:39.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h1><p>在执行“hexo s”，启动本地服务器时，控制台报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">FATAL Permission denied. You can&#39;t use port 4000.</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: listen EACCES: permission denied 0.0.0.0:4000</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>查看报错日志，很明显是默认启动端口4000已经被占用。<br>为了不影响现有已运行程序，我们暂时修改启动端口，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5555</span><br></pre></td></tr></table></figure><p>服务器成功启动。</p><p>此时，需通过 <a href="http://localhost:5555/">http://localhost:5555/</a> 来访问本地博客。</p>]]></content>
    
    
    <summary type="html">hexo s 报错</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo init 403超时报错</title>
    <link href="https://born2do.github.io/2021/03/02/hexo-init-403%E8%B6%85%E6%97%B6%E6%8A%A5%E9%94%99/"/>
    <id>https://born2do.github.io/2021/03/02/hexo-init-403%E8%B6%85%E6%97%B6%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-02T06:00:00.000Z</published>
    <updated>2021-03-02T15:32:20.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h1><p>在执行“hexo init blog”，对blog文件夹初始化时，控制台报错如下：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line"><span class="function">fatal: <span class="title">unable</span> <span class="title">to</span> <span class="title">access</span> &#x27;<span class="title">https</span>://<span class="title">github.com</span>/<span class="title">hexojs</span>/<span class="title">hexo</span>-<span class="title">starter.git</span>/&#x27;: <span class="title">Failed</span> <span class="title">to</span> <span class="title">connect</span> <span class="title">to</span> <span class="title">github.com</span> <span class="title">port</span> 443: <span class="title">Timed</span> <span class="title">out</span></span></span><br><span class="line"><span class="function">……</span></span><br></pre></td></tr></table></figure><h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>403网络超时报错，那么恭喜你，被墙了。<br>解决方式如下：</p><h2 id="1-检查是否真正由于无法连接GitHub导致。"><a href="#1-检查是否真正由于无法连接GitHub导致。" class="headerlink" title="1.检查是否真正由于无法连接GitHub导致。"></a>1.检查是否真正由于无法连接GitHub导致。</h2><p>在Windows命令行下，执行如下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> github.com</span><br></pre></td></tr></table></figure><p>如果结果显示100%丢失，那么就是因为无法连接到GitHub导致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">正在 Ping github.com [13.229.188.59] 具有 32 字节的数据:</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line"></span><br><span class="line">13.229.188.59 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 &#x3D; 4，已接收 &#x3D; 0，丢失 &#x3D; 4 (100% 丢失)，</span><br></pre></td></tr></table></figure><p>如果不是，请不要继续往下看了，浪费时间。请另寻他法。</p><h2 id="2-配置本地hosts"><a href="#2-配置本地hosts" class="headerlink" title="2.配置本地hosts"></a>2.配置本地hosts</h2><p>访问站长工具网站（ <a href="http://tool.chinaz.com/dns?type=1&amp;host=github.com&amp;ip=">http://tool.chinaz.com/dns?type=1&amp;host=github.com&amp;ip=</a> ），获取GitHub的相关DNS。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-2957dbe54c55bbe5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GitHub网站DNS获取.png"><br>先在本地ping相应的IP，如果可以连接上并且速度还行，那么可以将相关信息配置到本地hosts文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13.114.40.48 github.com</span><br></pre></td></tr></table></figure><p>hosts文件配置完成后，在命令行执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ipconfig &#x2F;flushdns</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">已成功刷新 DNS 解析缓存。</span><br></pre></td></tr></table></figure><h2 id="3-完美解决"><a href="#3-完美解决" class="headerlink" title="3.完美解决"></a>3.完美解决</h2><p>重新打开命令行窗口，执行“hexo init blog”，你会发现片刻后Hexo初始化便完成了。</p><blockquote><p>获取GitHub的DNS方式不止这一种方式，你也可以访问ipaddress网站（ <a href="https://github.com.ipaddress.com/www.github.com">https://github.com.ipaddress.com/www.github.com</a> ）获取相关IP，更多方式请自行百度。</p></blockquote>]]></content>
    
    
    <summary type="html">hexo init 403超时报错</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建</title>
    <link href="https://born2do.github.io/2021/03/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://born2do.github.io/2021/03/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-02T03:00:00.000Z</published>
    <updated>2021-03-02T15:30:13.664Z</updated>
    
    <content type="html"><![CDATA[<p>采用GitHub+Hexo搭建博客。<br>优点：干净好看，自主性强，没广告。<br>缺点：在建设过程中，很容易遇到墙，随之而来的便是失败了。<br>在此，记录下博客搭建过程。</p><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p>官网（ <a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a> ）下载node.js安装包，无脑安装即可。<br>Windows命令行下，检查是否成功安装：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\&gt;<span class="title">node</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function"><span class="title">v12</span>.19.0</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\&gt;<span class="title">npm</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function">6.14.8</span></span><br></pre></td></tr></table></figure><p>使用npm下载依赖时，由于是从国外的网站上下载内容，所以可能经常会出现不稳定的情况，所以需要下载cnpm代替npm，cnpm是国内淘宝的做的，在国内使用较为稳定。</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.下载cnpm</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="number">2</span>.下载依赖</span><br><span class="line">cnpm i  或者 cnpm install</span><br></pre></td></tr></table></figure><p>在后续的npm操作中，如卡顿或是直接超时报错，建议使用cnpm代替npm。</p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>官网（ <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ）下载Git安装包，在安装过程中如遇到“Use Windows’ default console window”，选择该项即可。剩余步骤无脑安装即可。<br>Windows命令行下，检查是否成功安装：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\&gt;<span class="title">git</span> --<span class="title">version</span></span></span><br><span class="line"><span class="function"><span class="title">git</span> <span class="title">version</span> 2.22.0.<span class="title">windows</span>.1</span></span><br></pre></td></tr></table></figure><h1 id="配置GitHubSSH"><a href="#配置GitHubSSH" class="headerlink" title="配置GitHubSSH"></a>配置GitHubSSH</h1><h2 id="1-在本地生成SSH-key"><a href="#1-在本地生成SSH-key" class="headerlink" title="1.在本地生成SSH key"></a>1.在本地生成SSH key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>一般默认在 <code>C:\Users\【你的用户名】\.ssh\</code> 目录下生成相应的id_rsa.pub文件。</p><h2 id="2-GitHub添加SSH-Key"><a href="#2-GitHub添加SSH-Key" class="headerlink" title="2.GitHub添加SSH Key"></a>2.GitHub添加SSH Key</h2><p>settings-&gt;SSH and GPG keys-&gt;New SSH key,<br>title随意，key则填写id_rsa.pub中的内容。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-34d6b263e5105822.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GitHub添加SSHKey.png"></p><h1 id="Hexo本地博客搭建"><a href="#Hexo本地博客搭建" class="headerlink" title="Hexo本地博客搭建"></a>Hexo本地博客搭建</h1><p>官网（ <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a> ），官方文档较为详细，可先自行阅读后再进行搭建工作。</p><h2 id="1-框架搭建"><a href="#1-框架搭建" class="headerlink" title="1.框架搭建"></a>1.框架搭建</h2><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ D:</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>以上命令是在D盘初始化了一个blog文件夹，该文件夹存放的是Hexo静态资源。<br>使用命令行界面进入D:\blog，执行“hexo server”，使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到我们搭建的博客网站。</p><h2 id="2-主题替换以及相关配置文件修改"><a href="#2-主题替换以及相关配置文件修改" class="headerlink" title="2.主题替换以及相关配置文件修改"></a>2.主题替换以及相关配置文件修改</h2><p>从官网下载自己心仪的主题，解压缩放置到<code>D:\blog\themes\</code>目录下。<br>更改根目录下的_config.yml文件，修改theme后面的值为刚才解压缩的文件夹名。重新执行“hexo server”，刷新浏览器会发现博客网站主题已经改变。<br>配置文件已经插件的下载安装，请自行查阅官网文档以及主题的帮助文档。不在此做过多介绍。</p><h1 id="本地博客发布至GitHub"><a href="#本地博客发布至GitHub" class="headerlink" title="本地博客发布至GitHub"></a>本地博客发布至GitHub</h1><p>在GitHub上新建仓库，名称格式为“【你的GitHub昵称】.github.io”。<br>更改根目录下的_config.yml文件，修改deploy后面的内容。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> [<span class="string">你的仓库地址</span>]</span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>使用命令行界面进入D:\blog，执行如下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>至此，静态博客网站搭建完成。</p><blockquote><p>实际上在搭建过程中，遇到了不少问题，并没有上述那么顺利。本文仅作流程参考，如果在搭建过程中遇到了其他问题，还请自行百度解决。<br>后续几篇文章我将分享下我在搭建过程中遇到的一些问题以及相应的解决办法，供大家参考。</p></blockquote>]]></content>
    
    
    <summary type="html">博客搭建</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://born2do.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="https://born2do.github.io/2021/03/02/Welcome-to-my-blog/"/>
    <id>https://born2do.github.io/2021/03/02/Welcome-to-my-blog/</id>
    <published>2021-03-02T02:00:00.000Z</published>
    <updated>2021-03-02T14:30:28.350Z</updated>
    
    <content type="html"><![CDATA[<p>博客建设，从CSDN到GitHub到博客园再到GitHub，从hexo到hugo再到hexo，最终还是选择了 Github+Hexo的方式来搭建自己的博客。<br>兜兜转转，还是她。<br>原因如下：</p><ul><li>使用gitpage搭建静态网站的成本为0 。</li><li>使用Hexo生成静态网站，简单、方便、美观。</li><li>Github+Hexo的搭建模式较为常见、流行，遇到问题了，网络上的解决办法比较多。</li></ul><p>后续我会将其他网站上的博客逐步迁移至GitHub上，只在该网站上进行博客的发布。网址：<a href="https://born2do.github.io/">https://born2do.github.io</a><br>并非大神，不喜勿喷。若博客有不到位之处，还烦请指正，感谢！！！</p>]]></content>
    
    
    <summary type="html">Welcome to my blog</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://born2do.github.io/2021/02/28/hello-world/"/>
    <id>https://born2do.github.io/2021/02/28/hello-world/</id>
    <published>2021-02-28T15:59:12.950Z</published>
    <updated>2021-02-28T15:59:12.950Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
