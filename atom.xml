<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenHY的个人博客</title>
  
  
  <link href="https://born2do.github.io/atom.xml" rel="self"/>
  
  <link href="https://born2do.github.io/"/>
  <updated>2021-04-10T11:51:59.518Z</updated>
  <id>https://born2do.github.io/</id>
  
  <author>
    <name>chenhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据表空间和索引表空间</title>
    <link href="https://born2do.github.io/2021/04/10/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%92%8C%E7%B4%A2%E5%BC%95%E8%A1%A8%E7%A9%BA%E9%97%B4/"/>
    <id>https://born2do.github.io/2021/04/10/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%92%8C%E7%B4%A2%E5%BC%95%E8%A1%A8%E7%A9%BA%E9%97%B4/</id>
    <published>2021-04-10T11:51:25.000Z</published>
    <updated>2021-04-10T11:51:59.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Oracle强烈建议，任何一个应用程序的库表至少需要创建两个表空间，其中之一用于存储表数据，而另一个用于存储表索引数据。因为如果将表数据和索引数据放在一起，表数据的I/O操作和索引的I/O操作将产生影响系统性能的I/O竞争，降低系统的响应效率。将表数据和索引数据存放在不同的表空间中（如一个为APP_DATA，另一个为APP_IDX），并在物理层面将这两个表空间的数据文件放在不同的物理磁盘上，就可以避免这种竞争了。</p></blockquote><p>oracle中，数据表空间和索引表空间的区别是表和索引分开在不同的表空间存放,放表的叫数据表空间, 放索引的叫索引表空间, 如果能分别存放在不同的硬盘上性能会更好,其与代码并无关系。</p>]]></content>
    
    
    <summary type="html">数据表空间和索引表空间</summary>
    
    
    
    <category term="数据库" scheme="https://born2do.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据表空间和索引表空间" scheme="https://born2do.github.io/tags/%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%92%8C%E7%B4%A2%E5%BC%95%E8%A1%A8%E7%A9%BA%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>【Java】为什么Java中Date类的很多方法被废弃了</title>
    <link href="https://born2do.github.io/2021/04/10/%E3%80%90Java%E3%80%91%E4%B8%BA%E4%BB%80%E4%B9%88Java%E4%B8%ADDate%E7%B1%BB%E7%9A%84%E5%BE%88%E5%A4%9A%E6%96%B9%E6%B3%95%E8%A2%AB%E5%BA%9F%E5%BC%83%E4%BA%86/"/>
    <id>https://born2do.github.io/2021/04/10/%E3%80%90Java%E3%80%91%E4%B8%BA%E4%BB%80%E4%B9%88Java%E4%B8%ADDate%E7%B1%BB%E7%9A%84%E5%BE%88%E5%A4%9A%E6%96%B9%E6%B3%95%E8%A2%AB%E5%BA%9F%E5%BC%83%E4%BA%86/</id>
    <published>2021-04-10T11:33:41.000Z</published>
    <updated>2021-04-10T11:39:37.944Z</updated>
    
    <content type="html"><![CDATA[<p>Date类的很多方法被废弃，归根结底是有缺陷、有问题，已经被新的、更完善的类、方法替代了。</p><p>Date类中有很多方法都标有删除线，是因为Date类在设计中有很多问题，如getYear指的是1900年以来的年数，getMonth是从0开始的。事实上，不止Date类，Java的日期时间相关类都存在设计问题。Java的日期类库有些混乱，据说已经重新设计了两次。</p><p>Date类已经逐渐被Calendar类所取代。</p><ul><li>int getDate() 已过时。从 JDK 1.1 开始，由 Calendar.get(Calendar.DAY_OF_MONTH) 取代。</li><li>int getDay() 已过时。从 JDK 1.1 开始，由 Calendar.get(Calendar.DAY_OF_WEEK) 取代。</li><li>int getHours() 已过时。从 JDK 1.1 开始，由 Calendar.get(Calendar.HOUR_OF_DAY) 取代。</li><li>int getMinutes() 已过时。从 JDK 1.1 开始，由 Calendar.get(Calendar.MINUTE) 取代。</li><li>int getMonth() 已过时。从 JDK 1.1 开始，由 Calendar.get(Calendar.MONTH) 取代。</li><li>int getSeconds() 已过时。从 JDK 1.1 开始，由 Calendar.get(Calendar.SECOND) 取代。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Time</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">System.out.println(date.getMonth());</span><br><span class="line"></span><br><span class="line">Calendar calendar = Calendar.getInstance();</span><br><span class="line">System.out.println(calendar.get(Calendar.MONTH));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【Java】为什么Java中Date类的很多方法被废弃了</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="Date" scheme="https://born2do.github.io/tags/Date/"/>
    
  </entry>
  
  <entry>
    <title>元字符及其描述</title>
    <link href="https://born2do.github.io/2021/04/09/%E5%85%83%E5%AD%97%E7%AC%A6%E5%8F%8A%E5%85%B6%E6%8F%8F%E8%BF%B0/"/>
    <id>https://born2do.github.io/2021/04/09/%E5%85%83%E5%AD%97%E7%AC%A6%E5%8F%8A%E5%85%B6%E6%8F%8F%E8%BF%B0/</id>
    <published>2021-04-09T11:58:34.000Z</published>
    <updated>2021-04-09T11:59:43.537Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>元字符</th><th>描述</th></tr></thead><tbody><tr><td>\</td><td>将下一个字符标记符、或一个向后引用、或一个八进制转义符。例如，“\n”匹配\n。“\n”匹配换行符。序列“\”匹配“\”而“(”则匹配“(”。即相当于多种编程语言中都有的“转义字符”的概念。</td></tr><tr><td>^</td><td>匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\n”或“\r”之后的位置。</td></tr><tr><td>$</td><td>匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\n”或“\r”之前的位置。</td></tr><tr><td>*</td><td>匹配前面的子表达式任意次。例如，zo<em>能匹配“z”，也能匹配“zo”以及“zoo”。</em>等价于o{0,}</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次(大于等于1次）。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“do”或“does”中的“do”。?等价于{0,1}。</td></tr><tr><td>{n}</td><td>n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。</td></tr><tr><td>{n,}</td><td>n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。</td></tr><tr><td>{n,m}</td><td>m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o为一组，后三个o为一组。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td>?</td><td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+”将尽可能多的匹配“o”，得到结果[“oooo”]，而“o+?”将尽可能少的匹配“o”，得到结果 [‘o’, ‘o’, ‘o’, ‘o’]</td></tr><tr><td>.点</td><td>匹配除“\r\n”之外的任何单个字符。要匹配包括“\r\n”在内的任何字符，请使用像“[\s\S]”的模式。</td></tr><tr><td>(pattern)</td><td>匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“(”或“)”。</td></tr><tr><td>(?:pattern)</td><td>非获取匹配，匹配pattern但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分时很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。</td></tr><tr><td>(?=pattern)</td><td>非获取匹配，正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>非获取匹配，正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。</td></tr><tr><td>(?&lt;=pattern)</td><td>非获取匹配，反向肯定预查，与正向肯定预查类似，只是方向相反。例如，“(?&lt;=95|98|NT|2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。</td></tr><tr><td>(?&lt;!pattern)</td><td>非获取匹配，反向否定预查，与正向否定预查类似，只是方向相反。例如“(?&lt;!95|98|NT|2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。这个地方不正确，有问题                此处用或任意一项都不能超过2位，如“(?&lt;!95|98|NT|20)Windows正确，“(?&lt;!95|980|NT|20)Windows 报错，若是单独使用则无限制，如(?&lt;!2000)Windows 正确匹配</td></tr><tr><td>x|y</td><td>匹配x或y。例如，“z|food”能匹配“z”或“food”(此处请谨慎)。“[zf]ood”则匹配“zood”或“food”。</td></tr><tr><td>[xyz]</td><td>字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。</td></tr><tr><td>[^xyz]</td><td>负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“plin”。</td></tr><tr><td>[a-z]</td><td>字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。                注意:只有连字符在字符组内部时,并且出现在两个字符之间时,才能表示字符的范围; 如果出字符组的开头,则只能表示连字符本身.</td></tr><tr><td>[^a-z]</td><td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。</td></tr><tr><td>\b</td><td>匹配一个单词边界，也就是指单词和空格间的位置（即正则表达式的“匹配”有两种概念，一种是匹配字符，一种是匹配位置，这里的\b就是匹配位置的）。例如，“er\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</td></tr><tr><td>\B</td><td>匹配非单词边界。“er\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</td></tr><tr><td>\cx</td><td>匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。</td></tr><tr><td>\d</td><td>匹配一个数字字符。等价于[0-9]。grep 要加上-P，perl正则支持</td></tr><tr><td>\D</td><td>匹配一个非数字字符。等价于[^0-9]。grep要加上-P，perl正则支持</td></tr><tr><td>\f</td><td>匹配一个换页符。等价于\x0c和\cL。</td></tr><tr><td>\n</td><td>匹配一个换行符。等价于\x0a和\cJ。</td></tr><tr><td>\r</td><td>匹配一个回车符。等价于\x0d和\cM。</td></tr><tr><td>\s</td><td>匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td></tr><tr><td>\S</td><td>匹配任何可见字符。等价于[^ \f\n\r\t\v]。</td></tr><tr><td>\t</td><td>匹配一个制表符。等价于\x09和\cI。</td></tr><tr><td>\v</td><td>匹配一个垂直制表符。等价于\x0b和\cK。</td></tr><tr><td>\w</td><td>匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0-9_]”，这里的”单词”字符使用Unicode字符集。</td></tr><tr><td>\W</td><td>匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">元字符及其描述</summary>
    
    
    
    <category term="元字符" scheme="https://born2do.github.io/categories/%E5%85%83%E5%AD%97%E7%AC%A6/"/>
    
    
    <category term="元字符" scheme="https://born2do.github.io/tags/%E5%85%83%E5%AD%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>【Java】栈内存与堆内存的区别</title>
    <link href="https://born2do.github.io/2021/04/09/%E3%80%90Java%E3%80%91%E6%A0%88%E5%86%85%E5%AD%98%E4%B8%8E%E5%A0%86%E5%86%85%E5%AD%98%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://born2do.github.io/2021/04/09/%E3%80%90Java%E3%80%91%E6%A0%88%E5%86%85%E5%AD%98%E4%B8%8E%E5%A0%86%E5%86%85%E5%AD%98%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2021-04-09T11:57:28.000Z</published>
    <updated>2021-04-09T11:58:14.549Z</updated>
    
    <content type="html"><![CDATA[<ol><li>栈内存与堆内存都是Java用来存储数据的地方。与C++不同，Java自动管理栈和堆，程序员不需要也不能够直接对栈或堆进行设置。</li><li>堆，用于存储对象。当Java程序使用 new 关键字创建对象时，堆内存会开辟出相应的内存来存储该对象，这些对象不需要被显式地释放，会有垃圾回收机制来处理这些长期没有被使用的对象。<ul><li>优点：他是在运行时动态分配内存大小，不需要人工管理垃圾数据，会有垃圾回收机制进行相应管理。</li><li>缺点：同样，因为是在运行时动态分配内存大小，故而存取速度较慢。</li></ul></li><li>栈，主要用于存放一些基本数据类型的变量和对象引用。<ul><li>优点：1）存取速度快于堆，仅次于寄存器。2）栈数据可共享。</li><li>缺点：存放在栈中的数据大小与生存期必须是确定的，缺乏灵活性。</li></ul></li></ol>]]></content>
    
    
    <summary type="html">【Java】栈内存与堆内存的区别</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="栈内存" scheme="https://born2do.github.io/tags/%E6%A0%88%E5%86%85%E5%AD%98/"/>
    
    <category term="堆内存" scheme="https://born2do.github.io/tags/%E5%A0%86%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>【IDEA社区版】webapp下静态资源无法访问</title>
    <link href="https://born2do.github.io/2021/04/08/%E3%80%90IDEA%E7%A4%BE%E5%8C%BA%E7%89%88%E3%80%91webapp%E4%B8%8B%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/"/>
    <id>https://born2do.github.io/2021/04/08/%E3%80%90IDEA%E7%A4%BE%E5%8C%BA%E7%89%88%E3%80%91webapp%E4%B8%8B%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/</id>
    <published>2021-04-08T13:50:32.000Z</published>
    <updated>2021-04-08T13:51:07.181Z</updated>
    
    <content type="html"><![CDATA[<p>一开始认为是webapp下的静态资源被拦截了，但是修改了springmvc.xml以及web.xml对静态资源的控制仍然没有反应。</p><p>打开浏览器的开发者模式，发现静态资源全部没有访问到，路径直接是 <a href="http://localhost:8080/css/*.css">http://localhost:8080/css/*.css</a> ，路径明显是错误的。</p><p>后改用绝对路径引入静态资源，页面正常显示。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;$&#123;pageContext.request.contextPath&#125;/js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>说明之前使用的相对路径引入资源是错误的，修改相对路径为<code>../js/jquery.min.js</code>，页面也可正常显示。</p><p>以此可以认为在引入静态资源时，默认当前路径为WEB-INF。但是以相对路径引入静态资源，IDEA会显示报错，即使该项目是可以正常启动并显示的。</p>]]></content>
    
    
    <summary type="html">【IDEA社区版】webapp下静态资源无法访问</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="webapp下静态资源无法访问" scheme="https://born2do.github.io/tags/webapp%E4%B8%8B%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>【Java】在写文件时进行输出换行</title>
    <link href="https://born2do.github.io/2021/04/07/%E3%80%90Java%E3%80%91%E5%9C%A8%E5%86%99%E6%96%87%E4%BB%B6%E6%97%B6%E8%BF%9B%E8%A1%8C%E8%BE%93%E5%87%BA%E6%8D%A2%E8%A1%8C/"/>
    <id>https://born2do.github.io/2021/04/07/%E3%80%90Java%E3%80%91%E5%9C%A8%E5%86%99%E6%96%87%E4%BB%B6%E6%97%B6%E8%BF%9B%E8%A1%8C%E8%BE%93%E5%87%BA%E6%8D%A2%E8%A1%8C/</id>
    <published>2021-04-07T13:56:25.000Z</published>
    <updated>2021-04-07T13:56:44.319Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近在做爬虫，需要将网页落地到本地的Markdown文档中。由于是多次写入，导致上一篇文档的结尾与下一篇文档的开头紧密连接在一起，格式出问题了。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>之所以会连接在一起，是因为没有对文章末进行换行处理，处理一下就好。</p><blockquote><p>在Windows操作系统中，”\r\n”为回车换行；<br>而在Linux系统中，”\n”即可。</p></blockquote><p>为了兼容这两种情况，我们使用如下方法获取换行符：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.getProperty(<span class="string">&quot;line.separator&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【Java】在写文件时进行输出换行</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="IO" scheme="https://born2do.github.io/tags/IO/"/>
    
  </entry>
  
  <entry>
    <title>【Java】Html转Markdown格式</title>
    <link href="https://born2do.github.io/2021/04/07/%E3%80%90Java%E3%80%91Html%E8%BD%ACMarkdown%E6%A0%BC%E5%BC%8F/"/>
    <id>https://born2do.github.io/2021/04/07/%E3%80%90Java%E3%80%91Html%E8%BD%ACMarkdown%E6%A0%BC%E5%BC%8F/</id>
    <published>2021-04-07T13:55:28.000Z</published>
    <updated>2021-04-07T13:56:00.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近在做爬虫项目，其中一个需求是将网页上的帮助文档，下载至本地并形成Markdown文档，方便离线查阅。</p><h1 id="探索及解决"><a href="#探索及解决" class="headerlink" title="探索及解决"></a>探索及解决</h1><p>找到两个具有该功能的Java类库，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.kotcrab.remark&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;remark&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;version&gt;1.0.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.github.houbb&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;html2md&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>相比较之下，我选择了remark。<br>使用html2md进行格式转换之后，最终文档与预期的格式差异较大。<br>而remark转换后则较为中规中矩，比较符合实际使用中的Markdown语法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将获取到的内容从HTML格式转换为Markdown格式</span></span><br><span class="line">Remark remark = <span class="keyword">new</span> Remark();</span><br><span class="line">content = remark.convert(content);</span><br></pre></td></tr></table></figure><p>转换前的Html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;12-总体架构&quot;</span>&gt;</span>1.2 总体架构<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>WebMagic的结构分为<span class="tag">&lt;<span class="name">code</span>&gt;</span>Downloader<span class="tag">&lt;/<span class="name">code</span>&gt;</span>、<span class="tag">&lt;<span class="name">code</span>&gt;</span>PageProcessor<span class="tag">&lt;/<span class="name">code</span>&gt;</span>、<span class="tag">&lt;<span class="name">code</span>&gt;</span>Scheduler<span class="tag">&lt;/<span class="name">code</span>&gt;</span>、<span class="tag">&lt;<span class="name">code</span>&gt;</span>Pipeline<span class="tag">&lt;/<span class="name">code</span>&gt;</span>四大组件，并由Spider将它们彼此组织起来。这四大组件对应爬虫生命周期中的下载、处理、管理和持久化等功能。WebMagic的设计参考了Scapy，但是实现方式更Java化一些。<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>而Spider则将这几个组件组织起来，让它们可以互相交互，流程化的执行，可以认为Spider是一个大的容器，它也是WebMagic逻辑的核心。<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>转换后的Markdown</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### 1.2 总体架构 ###</span></span><br><span class="line"></span><br><span class="line">WebMagic的结构分为<span class="code">`Downloader`</span>、<span class="code">`PageProcessor`</span>、<span class="code">`Scheduler`</span>、<span class="code">`Pipeline`</span>四大组件，并由Spider将它们彼此组织起来。这四大组件对应爬虫生命周期中的下载、处理、管理和持久化等功能。WebMagic的设计参考了Scapy，但是实现方式更Java化一些。</span><br><span class="line"></span><br><span class="line">而Spider则将这几个组件组织起来，让它们可以互相交互，流程化的执行，可以认为Spider是一个大的容器，它也是WebMagic逻辑的核心。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【Java】Html转Markdown格式</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="Html转Markdown" scheme="https://born2do.github.io/tags/Html%E8%BD%ACMarkdown/"/>
    
  </entry>
  
  <entry>
    <title>【Java】运算符的优先级和结合顺序</title>
    <link href="https://born2do.github.io/2021/04/06/%E3%80%90Java%E3%80%91%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E7%BB%93%E5%90%88%E9%A1%BA%E5%BA%8F/"/>
    <id>https://born2do.github.io/2021/04/06/%E3%80%90Java%E3%80%91%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E7%BB%93%E5%90%88%E9%A1%BA%E5%BA%8F/</id>
    <published>2021-04-06T15:13:26.000Z</published>
    <updated>2021-04-06T15:15:34.718Z</updated>
    
    <content type="html"><![CDATA[<p>1级（左结合） 　　() 圆括号；[]下标运算符；-&gt;指向结构体成员运算符；. 结构体成员运算符。 </p><p>2级（右结合） 　　!逻辑非运算符；~按位取反运算符；++前缀增量运算符；–前缀减量运算符；+正号运算符；-负号运算符；(类型)类型转换运算符；*指针运算符；&amp;地址运算符；sizeof长度运算符。 　　</p><p>3级（左结合） 　　*乘法运算符；/除法运算符；%取余运算符。 　　</p><p>4级（左结合） 　　+加法运算符；-减法运算符。 　　 　　</p><p>5级（左结合） 　　&lt;&lt;左移运算符；&gt;&gt;右移运算符。 　　</p><p>6级（左结合） 　　&lt;、&lt;=、&gt;、&gt;=关系运算符。 　　</p><p>7级（左结合） 　　==等于运算符；!=不等于运算符。 　　</p><p>8级（左结合） 　　&amp;按位与运算符。 　　</p><p>9级（左结合） 　　^按位异或运算符。 　　</p><p>10级（左结合） 　　|按位或运算符。 　　</p><p>11级（左结合） 　　&amp;&amp;逻辑与运算符。 　　</p><p>12级（左结合） 　　||逻辑或运算符。 　　</p><p>13级（右结合） 　　? :条件运算符。 　　</p><p>14级（右结合） 　　=、 +=、 -=、 *=、 /=、 %=、 &amp;=、 ^=、 |=、 &lt;&lt;=、 &gt;&gt;=赋值运算符。 　</p><p>15级（左结合） 　　,逗号运算符。</p>]]></content>
    
    
    <summary type="html">运算符的优先级和结合顺序</summary>
    
    
    
    <category term="C语言" scheme="https://born2do.github.io/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="运算符优先级" scheme="https://born2do.github.io/tags/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>【log4j】logger.isTraceEnabled()</title>
    <link href="https://born2do.github.io/2021/04/05/%E3%80%90log4j%E3%80%91logger-isTraceEnabled/"/>
    <id>https://born2do.github.io/2021/04/05/%E3%80%90log4j%E3%80%91logger-isTraceEnabled/</id>
    <published>2021-04-05T08:41:04.000Z</published>
    <updated>2021-04-05T08:41:29.459Z</updated>
    
    <content type="html"><![CDATA[<p>我们经常可以看到，在使用日志框架时，会有如下写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class="line">    logger.trace(<span class="string">&quot;trace&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么要这样写呢？这样写有什么好处？<br>首先我们来看下这两个方法的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTraceEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.repository.isDisabled(<span class="number">5000</span>) ? <span class="keyword">false</span> : Level.TRACE.isGreaterOrEqual(<span class="keyword">this</span>.getEffectiveLevel());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">trace</span><span class="params">(Object message)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">super</span>.repository.isDisabled(<span class="number">5000</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Level.TRACE.isGreaterOrEqual(<span class="keyword">this</span>.getEffectiveLevel())) &#123;</span><br><span class="line">            <span class="keyword">this</span>.forcedLog(FQCN, Level.TRACE, message, (Throwable)<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到，在使用trace方法打印日志时，会有与isTraceEnabled方法中一样的方法调用，也就是说等同于在trace中调用了isTraceEnabled方法。<br>那么为什么我们在使用时还要在外层进行一次判断呢？<br>官方的说法是：出于效率考虑，看具体情况而定。<br>我们就以下两种情况进行分析：</p><ol><li>直接传入参数，无其他处理<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger.trace(<span class="string">&quot;trace&quot;</span>);</span><br></pre></td></tr></table></figure>对于这种情况，则完全没有必要在外层进行筛选判断。</li><li>传参数时引入了其他方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger.debug(<span class="string">&quot;The money is &quot;</span> + getTotal());  </span><br></pre></td></tr></table></figure>对于这种情况，则需要考虑考虑了。如果getTotal()方法是一个较为复杂的、计算量庞大的方法，则在外层进行一下判断就是很有必要的了。无论当前系统的日志级别为哪一等级，程序程序都会调用debug方法，会执行getTotal方法，只不过最后的结果可能是不打印日志而已（日志级别为info或更高）。debug中调用这个方法会消耗较大资源，得不偿失。</li></ol>]]></content>
    
    
    <summary type="html">【log4j】logger.isTraceEnabled()</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="log4j" scheme="https://born2do.github.io/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>SLF4J日志级别</title>
    <link href="https://born2do.github.io/2021/04/04/SLF4J%E6%97%A5%E5%BF%97%E7%BA%A7%E5%88%AB/"/>
    <id>https://born2do.github.io/2021/04/04/SLF4J%E6%97%A5%E5%BF%97%E7%BA%A7%E5%88%AB/</id>
    <published>2021-04-04T15:34:56.000Z</published>
    <updated>2021-04-04T15:35:57.663Z</updated>
    
    <content type="html"><![CDATA[<p>SLF4J将日志分为trace、debug、info、warn、error五个级别，每个级别对应记录不同的日志，对应不同的使用场景。<br>优先级从高到低依次为trace、debug、info、warn、error，相对而言，打印的日志会越来越少。</p><ul><li>trace: 一般用来追踪详细的程序运行流，比如程序的运行过程中，运行到了哪一个方法，进入了哪一条分支。通过trace程序的运行流程，可以判断程序是否按照期望的逻辑在运行。</li><li>debug: 这类日志往往用在判断是否有出现bug的场景，且往往记录了代码运行的详细信息，比如方法调用传入的参数信息。</li><li>info：用来记录程序运行的一些关键信息，它不像trace那样记录程序运行的整个流程，也不像debug那样为了解决问题而记录详细的信息。info记录的是整个系统的运行信息，比如系统运行到了哪一个阶段，到达了哪一个状态。</li><li>warn：用来记录一些警告信息。警告信息表示，程序进入了一个特殊的状态，在该状态下程序可以继续运行，但是不建议让程序进入该状态，因为该状态可能导致结果出现问题。</li><li>error：用来记录运行时的错误信息，表示程序运行过程中出现了需要被解决的问题，往往是一些异常。使用error日志的时候，一般会将详细的异常出现的原因记录。</li></ul>]]></content>
    
    
    <summary type="html">SLF4J日志级别</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="SLF4J" scheme="https://born2do.github.io/tags/SLF4J/"/>
    
  </entry>
  
  <entry>
    <title>private final static Logger log= LoggerFactory.getLogger(HelloController.class);</title>
    <link href="https://born2do.github.io/2021/03/30/private-final-static-Logger-log-LoggerFactory-getLogger-HelloController-class/"/>
    <id>https://born2do.github.io/2021/03/30/private-final-static-Logger-log-LoggerFactory-getLogger-HelloController-class/</id>
    <published>2021-03-30T11:15:53.000Z</published>
    <updated>2021-03-30T11:16:31.315Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger= LoggerFactory.getLogger(HelloController.class);</span><br></pre></td></tr></table></figure><ul><li>设置为private是为了防止其他类使用当前类的日志对象；如果当前类需要被子类继承，并且都使用同一个日志对象时，可设置为protected 。</li><li>设置为static是为了让每个类中的日志对象只生成一份，日志对象是属于类的，不是属于具体的实例的。</li><li>设置成final是为了避免日志对象在运行时被修改。</li></ul>]]></content>
    
    
    <summary type="html">private final static Logger log= LoggerFactory.getLogger(HelloController.class);</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="logback" scheme="https://born2do.github.io/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>【logback】SLF4J: Failed to load class org.slf4j.impl.StaticLoggerBinder.</title>
    <link href="https://born2do.github.io/2021/03/30/%E3%80%90logback%E3%80%91SLF4J-Failed-to-load-class-org-slf4j-impl-StaticLoggerBinder/"/>
    <id>https://born2do.github.io/2021/03/30/%E3%80%90logback%E3%80%91SLF4J-Failed-to-load-class-org-slf4j-impl-StaticLoggerBinder/</id>
    <published>2021-03-30T11:14:53.000Z</published>
    <updated>2021-03-30T11:15:27.484Z</updated>
    
    <content type="html"><![CDATA[<p>测试logback，出现了如下报错：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SLF4J: Failed to load class &quot;org.slf4j.impl.StaticLoggerBinder&quot;.</span><br><span class="line">SLF4J: Defaulting to no-operation (NOP) logger implementation</span><br><span class="line">SLF4J: See http:<span class="comment">//www.slf4j.org/codes.html#StaticLoggerBinder for further details.</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>使用Maven构建的工程，logback的配置文件也都正常，但却报了上面的错误。<br>仔细察看一番，发现从Maven仓库复制依赖时把scope也给带上了，pom文件中的范围是test，而我的调用代码写在main函数中（非test范围），所以报错了。<br>解决办法：<br>将pom文件中的scope给注释掉，重新加载一下依赖就好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;ch.qos.logback&#x2F;logback-classic --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;ch.qos.logback&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;logback-classic&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;version&gt;1.2.3&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;version&gt;1.7.25&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【logback】SLF4J: Failed to load class org.slf4j.impl.StaticLoggerBinder.</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="logback" scheme="https://born2do.github.io/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>【WebMagic】webmagic-selenium 找不到config.ini文件</title>
    <link href="https://born2do.github.io/2021/03/29/%E3%80%90WebMagic%E3%80%91webmagic-selenium-%E6%89%BE%E4%B8%8D%E5%88%B0config-ini%E6%96%87%E4%BB%B6/"/>
    <id>https://born2do.github.io/2021/03/29/%E3%80%90WebMagic%E3%80%91webmagic-selenium-%E6%89%BE%E4%B8%8D%E5%88%B0config-ini%E6%96%87%E4%BB%B6/</id>
    <published>2021-03-29T15:44:42.000Z</published>
    <updated>2021-03-29T15:45:34.546Z</updated>
    
    <content type="html"><![CDATA[<p>WebMagic原作者对于webmagic-selenium已经有较长时间没有更新了，但是我们又想要用这个来获取渲染的页面数据，该怎么办呢？<br>鉴于Selenium 已经不再支持 PhantomJS，即使你使用了webmagic-selenium，并且添加了config.ini文件，程序仍然会报错。<br>有人会说降低Selenium的 jar包的版本就好，但是近来即使你降低到最低版本也不行了，Selenium已经全部移除了PhantomJS的依赖，老版本也是如此。<br>为此，我的建议是下载webmagic-selenium源码，然后修改剔除掉原有代码中对PhantomJS的使用，加入到自己的项目中使用即可。<br>我主要做了两个文件的改动：</p><ul><li>修改WebDriverPool.java<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">package com.born2do.webmagic.downloader.selenium;</span><br><span class="line"></span><br><span class="line">import org.openqa.selenium.WebDriver;</span><br><span class="line">import org.openqa.selenium.chrome.ChromeDriver;</span><br><span class="line">import org.openqa.selenium.firefox.FirefoxDriver;</span><br><span class="line">import org.openqa.selenium.remote.DesiredCapabilities;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import java.io.FileReader;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.net.MalformedURLException;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Collections;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Properties;</span><br><span class="line">import java.util.concurrent.BlockingDeque;</span><br><span class="line">import java.util.concurrent.LinkedBlockingDeque;</span><br><span class="line">import java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author code4crafter@gmail.com &lt;br&gt;</span><br><span class="line"> *         Date: 13-7-26 &lt;br&gt;</span><br><span class="line"> *         Time: 下午1:41 &lt;br&gt;</span><br><span class="line"> *&#x2F;</span><br><span class="line">class WebDriverPool &#123;</span><br><span class="line">private Logger logger &#x3D; LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line">private final static int DEFAULT_CAPACITY &#x3D; 5;</span><br><span class="line"></span><br><span class="line">private final int capacity;</span><br><span class="line"></span><br><span class="line">private final static int STAT_RUNNING &#x3D; 1;</span><br><span class="line"></span><br><span class="line">private final static int STAT_CLODED &#x3D; 2;</span><br><span class="line"></span><br><span class="line">private AtomicInteger stat &#x3D; new AtomicInteger(STAT_RUNNING);</span><br><span class="line"></span><br><span class="line">private WebDriver mDriver &#x3D; null;</span><br><span class="line"></span><br><span class="line">private static final String DEFAULT_CONFIG_FILE &#x3D; &quot;&#x2F;config.ini&quot;;</span><br><span class="line">private static final String DRIVER_FIREFOX &#x3D; &quot;firefox&quot;;</span><br><span class="line">private static final String DRIVER_CHROME &#x3D; &quot;chrome&quot;;</span><br><span class="line"></span><br><span class="line">protected static Properties sConfig;</span><br><span class="line">protected static DesiredCapabilities sCaps;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Configure the GhostDriver, and initialize a WebDriver instance. This part</span><br><span class="line"> * of code comes from GhostDriver.</span><br><span class="line"> * https:&#x2F;&#x2F;github.com&#x2F;detro&#x2F;ghostdriver&#x2F;tree&#x2F;master&#x2F;test&#x2F;java&#x2F;src&#x2F;test&#x2F;java&#x2F;ghostdriver</span><br><span class="line"> * </span><br><span class="line"> * @author bob.li.0718@gmail.com</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void configure() throws IOException &#123;</span><br><span class="line">&#x2F;&#x2F; Read config file</span><br><span class="line">sConfig &#x3D; new Properties();</span><br><span class="line">&#x2F;&#x2F; String configFile &#x3D; DEFAULT_CONFIG_FILE;</span><br><span class="line">String configFile &#x3D; this.getClass().getResource(DEFAULT_CONFIG_FILE).getPath();</span><br><span class="line">if (System.getProperty(&quot;selenuim_config&quot;)!&#x3D;null)&#123;</span><br><span class="line">configFile &#x3D; System.getProperty(&quot;selenuim_config&quot;);</span><br><span class="line">&#125;</span><br><span class="line">sConfig.load(new FileReader(configFile));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Prepare capabilities</span><br><span class="line">sCaps &#x3D; new DesiredCapabilities();</span><br><span class="line">sCaps.setJavascriptEnabled(true);</span><br><span class="line">sCaps.setCapability(&quot;takesScreenshot&quot;, false);</span><br><span class="line"></span><br><span class="line">String driver &#x3D; sConfig.getProperty(&quot;driver&quot;, DRIVER_CHROME);</span><br><span class="line"></span><br><span class="line">ArrayList&lt;String&gt; cliArgsCap &#x3D; new ArrayList&lt;String&gt;();</span><br><span class="line">cliArgsCap.add(&quot;--web-security&#x3D;false&quot;);</span><br><span class="line">cliArgsCap.add(&quot;--ssl-protocol&#x3D;any&quot;);</span><br><span class="line">cliArgsCap.add(&quot;--ignore-ssl-errors&#x3D;true&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Start appropriate Driver</span><br><span class="line">if (driver.equals(DRIVER_FIREFOX)) &#123;</span><br><span class="line">mDriver &#x3D; new FirefoxDriver(sCaps);</span><br><span class="line">&#125; else if (driver.equals(DRIVER_CHROME)) &#123;</span><br><span class="line">mDriver &#x3D; new ChromeDriver(sCaps);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * check whether input is a valid URL</span><br><span class="line"> * </span><br><span class="line"> * @author bob.li.0718@gmail.com</span><br><span class="line"> * @param urlString urlString</span><br><span class="line"> * @return true means yes, otherwise no.</span><br><span class="line"> *&#x2F;</span><br><span class="line">private boolean isUrl(String urlString) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">new URL(urlString);</span><br><span class="line">return true;</span><br><span class="line">&#125; catch (MalformedURLException mue) &#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * store webDrivers created</span><br><span class="line"> *&#x2F;</span><br><span class="line">private List&lt;WebDriver&gt; webDriverList &#x3D; Collections</span><br><span class="line">.synchronizedList(new ArrayList&lt;WebDriver&gt;());</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * store webDrivers available</span><br><span class="line"> *&#x2F;</span><br><span class="line">private BlockingDeque&lt;WebDriver&gt; innerQueue &#x3D; new LinkedBlockingDeque&lt;WebDriver&gt;();</span><br><span class="line"></span><br><span class="line">public WebDriverPool(int capacity) &#123;</span><br><span class="line">this.capacity &#x3D; capacity;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public WebDriverPool() &#123;</span><br><span class="line">this(DEFAULT_CAPACITY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * </span><br><span class="line"> * @return</span><br><span class="line"> * @throws InterruptedException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public WebDriver get() throws InterruptedException &#123;</span><br><span class="line">checkRunning();</span><br><span class="line">WebDriver poll &#x3D; innerQueue.poll();</span><br><span class="line">if (poll !&#x3D; null) &#123;</span><br><span class="line">return poll;</span><br><span class="line">&#125;</span><br><span class="line">if (webDriverList.size() &lt; capacity) &#123;</span><br><span class="line">synchronized (webDriverList) &#123;</span><br><span class="line">if (webDriverList.size() &lt; capacity) &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; add new WebDriver instance into pool</span><br><span class="line">try &#123;</span><br><span class="line">configure();</span><br><span class="line">innerQueue.add(mDriver);</span><br><span class="line">webDriverList.add(mDriver);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return innerQueue.take();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void returnToPool(WebDriver webDriver) &#123;</span><br><span class="line">checkRunning();</span><br><span class="line">innerQueue.add(webDriver);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void checkRunning() &#123;</span><br><span class="line">if (!stat.compareAndSet(STAT_RUNNING, STAT_RUNNING)) &#123;</span><br><span class="line">throw new IllegalStateException(&quot;Already closed!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void closeAll() &#123;</span><br><span class="line">boolean b &#x3D; stat.compareAndSet(STAT_RUNNING, STAT_CLODED);</span><br><span class="line">if (!b) &#123;</span><br><span class="line">throw new IllegalStateException(&quot;Already closed!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">for (WebDriver webDriver : webDriverList) &#123;</span><br><span class="line">logger.info(&quot;Quit webDriver&quot; + webDriver);</span><br><span class="line">webDriver.quit();</span><br><span class="line">webDriver &#x3D; null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>在resources目录下新增config.ini文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># What WebDriver to use for the tests</span><br><span class="line">#driver&#x3D;firefox</span><br><span class="line">driver&#x3D;chrome</span><br><span class="line"></span><br><span class="line">#谷歌浏览器启动程序路径</span><br><span class="line">#chrome_exec_path&#x3D;D:\chromedriver_win32\chromedriver.exe</span><br><span class="line">chrome_driver_loglevel&#x3D;DEBUG</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">【WebMagic】webmagic-selenium 找不到config.ini文件</summary>
    
    
    
    <category term="爬虫" scheme="https://born2do.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="WebMagic" scheme="https://born2do.github.io/tags/WebMagic/"/>
    
    <category term="webmagic-selenium" scheme="https://born2do.github.io/tags/webmagic-selenium/"/>
    
  </entry>
  
  <entry>
    <title>【WebMagic】获取标签对象的属性值</title>
    <link href="https://born2do.github.io/2021/03/29/%E3%80%90WebMagic%E3%80%91%E8%8E%B7%E5%8F%96%E6%A0%87%E7%AD%BE%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7%E5%80%BC/"/>
    <id>https://born2do.github.io/2021/03/29/%E3%80%90WebMagic%E3%80%91%E8%8E%B7%E5%8F%96%E6%A0%87%E7%AD%BE%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7%E5%80%BC/</id>
    <published>2021-03-29T15:43:56.000Z</published>
    <updated>2021-03-29T15:44:25.158Z</updated>
    
    <content type="html"><![CDATA[<p>在使用WebMagic获取标签的过程中，如何获取到标签对象的属性值？</p><p>在元素选择器中有两个参数，第一个参数是匹配标签的表达式，第二个参数就是属性的名字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取div标签的data-card-value属性值</span></span><br><span class="line">String str = block.$(<span class="string">&quot;div&quot;</span>, <span class="string">&quot;data-card-value&quot;</span>).toString();</span><br><span class="line">System.out.println(<span class="string">&quot;data-card-value的属性值为：&quot;</span> + str);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【WebMagic】获取标签对象的属性值</summary>
    
    
    
    <category term="爬虫" scheme="https://born2do.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="WebMagic" scheme="https://born2do.github.io/tags/WebMagic/"/>
    
  </entry>
  
  <entry>
    <title>【WebMagic】解析获取JSON数据</title>
    <link href="https://born2do.github.io/2021/03/27/%E3%80%90WebMagic%E3%80%91%E8%A7%A3%E6%9E%90%E8%8E%B7%E5%8F%96JSON%E6%95%B0%E6%8D%AE/"/>
    <id>https://born2do.github.io/2021/03/27/%E3%80%90WebMagic%E3%80%91%E8%A7%A3%E6%9E%90%E8%8E%B7%E5%8F%96JSON%E6%95%B0%E6%8D%AE/</id>
    <published>2021-03-27T11:37:31.000Z</published>
    <updated>2021-03-27T11:37:56.926Z</updated>
    
    <content type="html"><![CDATA[<p>WebMagic为我们提供了JsonPathSelector用来提取JSON数据，具体用法参见下方的Demo 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.born2do.code;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> us.codecraft.webmagic.selector.JsonPathSelector;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenhy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/3/27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMagicDemo01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String json = <span class="string">&quot;&#123;\&quot;mode\&quot;:\&quot;xml\&quot;,\&quot;code\&quot;:\&quot;        &lt;dependency&gt;\\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\\n            &lt;optional&gt;true&lt;/optional&gt;\\n        &lt;/dependency&gt;\\n\\n\\n &lt;build&gt;\\n        &lt;plugins&gt;\\n            &lt;plugin&gt;\\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\\n                &lt;configuration&gt;\\n                    &lt;excludes&gt;\\n                        &lt;exclude&gt;\\n                            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n                            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\\n                        &lt;/exclude&gt;\\n                    &lt;/excludes&gt;\\n                &lt;/configuration&gt;\\n            &lt;/plugin&gt;\\n        &lt;/plugins&gt;\\n    &lt;/build&gt;\&quot;,\&quot;heightLimit\&quot;:true,\&quot;margin\&quot;:true,\&quot;id\&quot;:\&quot;Wptpj\&quot;&#125;\n&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;原JSON数据：\n&quot;</span> + json);</span><br><span class="line">        <span class="comment">// 构造函数中的参数jsonPathStr为匹配规则</span></span><br><span class="line">        JsonPathSelector jsonPathSelector = <span class="keyword">new</span> JsonPathSelector(<span class="string">&quot;$.code&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;获取到的JSON数据中code的属性值：\n&quot;</span> + jsonPathSelector.select(json));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">原JSON数据：</span><br><span class="line">&#123;<span class="string">&quot;mode&quot;</span>:<span class="string">&quot;xml&quot;</span>,<span class="string">&quot;code&quot;</span>:<span class="string">&quot;        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n\n\n &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;&quot;</span>,<span class="string">&quot;heightLimit&quot;</span>:<span class="keyword">true</span>,<span class="string">&quot;margin&quot;</span>:<span class="keyword">true</span>,<span class="string">&quot;id&quot;</span>:<span class="string">&quot;Wptpj&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">获取到的JSON数据中code的属性值：</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;</span><br><span class="line">&lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;excludes&gt;</span><br><span class="line">&lt;exclude&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;</span><br><span class="line">&lt;/exclude&gt;</span><br><span class="line">&lt;/excludes&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【WebMagic】解析获取JSON数据</summary>
    
    
    
    <category term="爬虫" scheme="https://born2do.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="WebMagic" scheme="https://born2do.github.io/tags/WebMagic/"/>
    
  </entry>
  
  <entry>
    <title>【WebMagic】抓取前端渲染的页面</title>
    <link href="https://born2do.github.io/2021/03/27/%E3%80%90WebMagic%E3%80%91%E6%8A%93%E5%8F%96%E5%89%8D%E7%AB%AF%E6%B8%B2%E6%9F%93%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
    <id>https://born2do.github.io/2021/03/27/%E3%80%90WebMagic%E3%80%91%E6%8A%93%E5%8F%96%E5%89%8D%E7%AB%AF%E6%B8%B2%E6%9F%93%E7%9A%84%E9%A1%B5%E9%9D%A2/</id>
    <published>2021-03-27T11:36:31.000Z</published>
    <updated>2021-03-27T11:37:13.413Z</updated>
    
    <content type="html"><![CDATA[<p>随着AJAX技术不断的普及，以及现在AngularJS这种Single-page application框架的出现，现在js渲染出的页面越来越多。对于爬虫来说，这种页面是比较讨厌的：仅仅提取HTML内容，往往无法拿到有效的信息。那么如何处理这种页面呢？总的来说有两种做法：</p><ol><li> 在抓取阶段，在爬虫中内置一个浏览器内核，执行js渲染页面后，再抓取。这方面对应的工具有<code>Selenium</code>、<code>HtmlUnit</code>或者<code>PhantomJs</code>。但是这些工具都存在一定的效率问题，同时也不是那么稳定。好处是编写规则同静态页面一样。</li><li> 因为js渲染页面的数据也是从后端拿到，而且基本上都是AJAX获取，所以分析AJAX请求，找到对应数据的请求，也是比较可行的做法。而且相对于页面样式，这种接口变化可能性更小。缺点就是找到这个请求，并进行模拟，是一个相对困难的过程，也需要相对多的分析经验。</li></ol><p>方法一是通过执行js渲染页面获取静态页面来抓取数据，而方法二则是找规律找到目标数据的请求URL来获取数据。<br>本次着重讲解方法一，这种方式相对来说较为简单。</p><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><ol><li>谷歌浏览器+驱动<br>下载谷歌浏览器，然后下载该浏览器对应版本的驱动。<br>查看谷歌浏览器版本：<br>chrome://settings/help<br>驱动下载地址：<br>源地址：<a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a><br>国内镜像：<a href="http://npm.taobao.org/mirrors/chromedriver/">http://npm.taobao.org/mirrors/chromedriver/</a></li></ol><h1 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h1><p>我使用的是SpringBoot框架，项目的目录结构如下：<br><img src="https://upload-images.jianshu.io/upload_images/20609583-1f399310f6bd6207.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="crawler.png"><br>各源文件如下：<br>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.4.0&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.born2do&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;crawler&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;8&lt;&#x2F;maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;8&lt;&#x2F;maven.compiler.target&gt;</span><br><span class="line">        &lt;webmagic.version&gt;0.7.4&lt;&#x2F;webmagic.version&gt;</span><br><span class="line">    &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.springframework.boot&#x2F;spring-boot-starter-web --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.springframework.boot&#x2F;spring-boot-starter-data-jpa --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.springframework.boot&#x2F;spring-boot-starter-test --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;mysql&#x2F;mysql-connector-java --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;8.0.15&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;us.codecraft&#x2F;webmagic-core --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;us.codecraft&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;webmagic-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;webmagic.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;us.codecraft&#x2F;webmagic-extension --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;us.codecraft&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;webmagic-extension&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;webmagic.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;com.google.guava&#x2F;guava --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.google.guava&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;guava&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;30.0-jre&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.apache.commons&#x2F;commons-lang3 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang3&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.9&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;com.kotcrab.remark&#x2F;remark --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.kotcrab.remark&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;remark&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.0.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.seleniumhq.selenium&#x2F;selenium-java --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.seleniumhq.selenium&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;selenium-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.33.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><p>CrawlerOnSpringBoot2Doc.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">package com.born2do.task;</span><br><span class="line"></span><br><span class="line">import com.born2do.webmagic.downloader.selenium.SeleniumDownloader;</span><br><span class="line">import com.overzealous.remark.Remark;</span><br><span class="line">import org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import us.codecraft.webmagic.Page;</span><br><span class="line">import us.codecraft.webmagic.Site;</span><br><span class="line">import us.codecraft.webmagic.Spider;</span><br><span class="line">import us.codecraft.webmagic.processor.PageProcessor;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.nio.file.Path;</span><br><span class="line">import java.nio.file.Paths;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 获取《SpringBoot2核心技术与响应式编程》教学文档</span><br><span class="line"> * 说明：“语雀”前端页面较为复杂，数据有多层加密，且主要由Ajax渲染页面数据，在这里并没有对代码块以及思维导图进行进一步处理，需人工处理</span><br><span class="line"> *</span><br><span class="line"> * @author chenhy</span><br><span class="line"> * @date 2021&#x2F;3&#x2F;22</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Component</span><br><span class="line">public class CrawlerOnSpringBoot2Doc implements PageProcessor &#123;</span><br><span class="line"></span><br><span class="line">    private static final String website &#x3D; &quot;https:&#x2F;&#x2F;www.yuque.com&#x2F;atguigu&#x2F;springboot&quot;;</span><br><span class="line"></span><br><span class="line">    private static final String file &#x3D; &quot;D:\\SpringBoot2核心技术与响应式编程.md&quot;;</span><br><span class="line"></span><br><span class="line">    private Site site &#x3D; Site.me().setCharset(&quot;UTF8&quot;) &#x2F;&#x2F; 编码格式</span><br><span class="line">            .setTimeOut(1000 * 30) &#x2F;&#x2F; 超时时间</span><br><span class="line">            .setRetrySleepTime(1000 * 5) &#x2F;&#x2F; 重试时间间隔</span><br><span class="line">            .setRetryTimes(10); &#x2F;&#x2F; 重试次数</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process(Page page) &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取所有目录的url，并加入爬虫队列中</span><br><span class="line">        if (website.equals(page.getUrl().toString())) &#123;</span><br><span class="line">            List&lt;String&gt; urls &#x3D; page.getHtml().xpath(&quot;&#x2F;&#x2F;span[@class&#x3D;&#39;name&#39;]&quot;).links().all();</span><br><span class="line">            for (String url : urls) &#123;</span><br><span class="line">                page.addTargetRequest(url);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            &#x2F;&#x2F; 获取内容</span><br><span class="line">            String content &#x3D; page.getHtml().xpath(&quot;&#x2F;&#x2F;div[@class&#x3D;&#39;index-module_title_1s0gC&#39;]&quot;).toString()</span><br><span class="line">                    + page.getHtml().xpath(&quot;&#x2F;&#x2F;div[@class&#x3D;&#39;yuque-doc-content&#39;]&quot;).toString();</span><br><span class="line">            &#x2F;&#x2F; 将获取到的内容从HTML格式转换为Markdown格式</span><br><span class="line">            Remark remark &#x3D; new Remark();</span><br><span class="line">            content &#x3D; remark.convert(content);</span><br><span class="line">            page.putField(&quot;content&quot;, content);</span><br><span class="line">            System.out.println(page.getUrl() + &quot;   download over!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Site getSite() &#123;</span><br><span class="line">        return site;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Scheduled(fixedDelay &#x3D; 1000 * 60 * 60 * 24)</span><br><span class="line">    private void mainProcess() throws IOException &#123;</span><br><span class="line">        Path filePath &#x3D; Paths.get(file);</span><br><span class="line">        if (Files.exists(filePath)) &#123;</span><br><span class="line">            Files.delete(filePath);</span><br><span class="line">        &#125;</span><br><span class="line">        Files.createFile(filePath);</span><br><span class="line">        Spider.create(new CrawlerOnSpringBoot2Doc())</span><br><span class="line">                .addUrl(website)</span><br><span class="line">                .setDownloader(new SeleniumDownloader(&quot;D:\\chromedriver_win32\\chromedriver.exe&quot;))</span><br><span class="line">                .thread(1)</span><br><span class="line">                .addPipeline(new MarkdownPipeLine(filePath))</span><br><span class="line">                .run();</span><br><span class="line">        System.out.println(&quot;process is over!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MarkdownPipeLine.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">package com.born2do.task;</span><br><span class="line"></span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import us.codecraft.webmagic.ResultItems;</span><br><span class="line">import us.codecraft.webmagic.Task;</span><br><span class="line">import us.codecraft.webmagic.pipeline.Pipeline;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.nio.charset.StandardCharsets;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.nio.file.Path;</span><br><span class="line">import java.nio.file.StandardOpenOption;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author chenhy</span><br><span class="line"> * @date 2021&#x2F;3&#x2F;21</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class MarkdownPipeLine implements Pipeline &#123;</span><br><span class="line"></span><br><span class="line">    private Path filePath;</span><br><span class="line"></span><br><span class="line">    public MarkdownPipeLine(Path filePath) &#123;</span><br><span class="line">        this.filePath &#x3D; filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process(ResultItems resultItems, Task task) &#123;</span><br><span class="line">        Map&lt;String, Object&gt; result &#x3D; resultItems.getAll();</span><br><span class="line">        String content &#x3D; (String) result.get(&quot;content&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            Files.write(filePath, content.getBytes(StandardCharsets.UTF_8), StandardOpenOption.APPEND);</span><br><span class="line">            &#x2F;&#x2F; 换行</span><br><span class="line">            Files.write(filePath, System.getProperty(&quot;line.separator&quot;).getBytes(StandardCharsets.UTF_8), StandardOpenOption.APPEND);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SeleniumDownloader.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">package com.born2do.webmagic.downloader.selenium;</span><br><span class="line"></span><br><span class="line">import org.openqa.selenium.By;</span><br><span class="line">import org.openqa.selenium.Cookie;</span><br><span class="line">import org.openqa.selenium.WebDriver;</span><br><span class="line">import org.openqa.selenium.WebElement;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import us.codecraft.webmagic.Page;</span><br><span class="line">import us.codecraft.webmagic.Request;</span><br><span class="line">import us.codecraft.webmagic.Site;</span><br><span class="line">import us.codecraft.webmagic.Task;</span><br><span class="line">import us.codecraft.webmagic.downloader.Downloader;</span><br><span class="line">import us.codecraft.webmagic.selector.Html;</span><br><span class="line">import us.codecraft.webmagic.selector.PlainText;</span><br><span class="line"></span><br><span class="line">import java.io.Closeable;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 使用Selenium调用浏览器进行渲染。目前仅支持chrome。&lt;br&gt;</span><br><span class="line"> * 需要下载Selenium driver支持。&lt;br&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author code4crafter@gmail.com &lt;br&gt;</span><br><span class="line"> *         Date: 13-7-26 &lt;br&gt;</span><br><span class="line"> *         Time: 下午1:37 &lt;br&gt;</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class SeleniumDownloader implements Downloader, Closeable &#123;</span><br><span class="line"></span><br><span class="line">private volatile WebDriverPool webDriverPool;</span><br><span class="line"></span><br><span class="line">private Logger logger &#x3D; LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line">private int sleepTime &#x3D; 0;</span><br><span class="line"></span><br><span class="line">private int poolSize &#x3D; 1;</span><br><span class="line"></span><br><span class="line">private static final String DRIVER_PHANTOMJS &#x3D; &quot;phantomjs&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 新建</span><br><span class="line"> *</span><br><span class="line"> * @param chromeDriverPath chromeDriverPath</span><br><span class="line"> *&#x2F;</span><br><span class="line">public SeleniumDownloader(String chromeDriverPath) &#123;</span><br><span class="line">System.getProperties().setProperty(&quot;webdriver.chrome.driver&quot;,</span><br><span class="line">chromeDriverPath);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Constructor without any filed. Construct PhantomJS browser</span><br><span class="line"> * </span><br><span class="line"> * @author bob.li.0718@gmail.com</span><br><span class="line"> *&#x2F;</span><br><span class="line">public SeleniumDownloader() &#123;</span><br><span class="line">&#x2F;&#x2F; System.setProperty(&quot;phantomjs.binary.path&quot;,</span><br><span class="line">&#x2F;&#x2F; &quot;&#x2F;Users&#x2F;Bingo&#x2F;Downloads&#x2F;phantomjs-1.9.7-macosx&#x2F;bin&#x2F;phantomjs&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * set sleep time to wait until load success</span><br><span class="line"> *</span><br><span class="line"> * @param sleepTime sleepTime</span><br><span class="line"> * @return this</span><br><span class="line"> *&#x2F;</span><br><span class="line">public SeleniumDownloader setSleepTime(int sleepTime) &#123;</span><br><span class="line">this.sleepTime &#x3D; sleepTime;</span><br><span class="line">return this;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Page download(Request request, Task task) &#123;</span><br><span class="line">checkInit();</span><br><span class="line">WebDriver webDriver;</span><br><span class="line">try &#123;</span><br><span class="line">webDriver &#x3D; webDriverPool.get();</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">logger.warn(&quot;interrupted&quot;, e);</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line">logger.info(&quot;downloading page &quot; + request.getUrl());</span><br><span class="line">webDriver.get(request.getUrl());</span><br><span class="line">try &#123;</span><br><span class="line">Thread.sleep(sleepTime);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">WebDriver.Options manage &#x3D; webDriver.manage();</span><br><span class="line">Site site &#x3D; task.getSite();</span><br><span class="line">if (site.getCookies() !&#x3D; null) &#123;</span><br><span class="line">for (Map.Entry&lt;String, String&gt; cookieEntry : site.getCookies()</span><br><span class="line">.entrySet()) &#123;</span><br><span class="line">Cookie cookie &#x3D; new Cookie(cookieEntry.getKey(),</span><br><span class="line">cookieEntry.getValue());</span><br><span class="line">manage.addCookie(cookie);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line"> * TODO You can add mouse event or other processes</span><br><span class="line"> * </span><br><span class="line"> * @author: bob.li.0718@gmail.com</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">WebElement webElement &#x3D; webDriver.findElement(By.xpath(&quot;&#x2F;html&quot;));</span><br><span class="line">String content &#x3D; webElement.getAttribute(&quot;outerHTML&quot;);</span><br><span class="line">Page page &#x3D; new Page();</span><br><span class="line">page.setRawText(content);</span><br><span class="line">page.setHtml(new Html(content, request.getUrl()));</span><br><span class="line">page.setUrl(new PlainText(request.getUrl()));</span><br><span class="line">page.setRequest(request);</span><br><span class="line">webDriverPool.returnToPool(webDriver);</span><br><span class="line">return page;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void checkInit() &#123;</span><br><span class="line">if (webDriverPool &#x3D;&#x3D; null) &#123;</span><br><span class="line">synchronized (this) &#123;</span><br><span class="line">webDriverPool &#x3D; new WebDriverPool(poolSize);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void setThread(int thread) &#123;</span><br><span class="line">this.poolSize &#x3D; thread;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void close() throws IOException &#123;</span><br><span class="line">webDriverPool.closeAll();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebDriverPool.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">package com.born2do.webmagic.downloader.selenium;</span><br><span class="line"></span><br><span class="line">import org.openqa.selenium.WebDriver;</span><br><span class="line">import org.openqa.selenium.chrome.ChromeDriver;</span><br><span class="line">import org.openqa.selenium.firefox.FirefoxDriver;</span><br><span class="line">import org.openqa.selenium.remote.DesiredCapabilities;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import java.io.FileReader;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.net.MalformedURLException;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Collections;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Properties;</span><br><span class="line">import java.util.concurrent.BlockingDeque;</span><br><span class="line">import java.util.concurrent.LinkedBlockingDeque;</span><br><span class="line">import java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author code4crafter@gmail.com &lt;br&gt;</span><br><span class="line"> *         Date: 13-7-26 &lt;br&gt;</span><br><span class="line"> *         Time: 下午1:41 &lt;br&gt;</span><br><span class="line"> *&#x2F;</span><br><span class="line">class WebDriverPool &#123;</span><br><span class="line">private Logger logger &#x3D; LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line">private final static int DEFAULT_CAPACITY &#x3D; 5;</span><br><span class="line"></span><br><span class="line">private final int capacity;</span><br><span class="line"></span><br><span class="line">private final static int STAT_RUNNING &#x3D; 1;</span><br><span class="line"></span><br><span class="line">private final static int STAT_CLODED &#x3D; 2;</span><br><span class="line"></span><br><span class="line">private AtomicInteger stat &#x3D; new AtomicInteger(STAT_RUNNING);</span><br><span class="line"></span><br><span class="line">private WebDriver mDriver &#x3D; null;</span><br><span class="line"></span><br><span class="line">private static final String DEFAULT_CONFIG_FILE &#x3D; &quot;&#x2F;config.ini&quot;;</span><br><span class="line">private static final String DRIVER_FIREFOX &#x3D; &quot;firefox&quot;;</span><br><span class="line">private static final String DRIVER_CHROME &#x3D; &quot;chrome&quot;;</span><br><span class="line"></span><br><span class="line">protected static Properties sConfig;</span><br><span class="line">protected static DesiredCapabilities sCaps;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Configure the GhostDriver, and initialize a WebDriver instance. This part</span><br><span class="line"> * of code comes from GhostDriver.</span><br><span class="line"> * https:&#x2F;&#x2F;github.com&#x2F;detro&#x2F;ghostdriver&#x2F;tree&#x2F;master&#x2F;test&#x2F;java&#x2F;src&#x2F;test&#x2F;java&#x2F;ghostdriver</span><br><span class="line"> * </span><br><span class="line"> * @author bob.li.0718@gmail.com</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void configure() throws IOException &#123;</span><br><span class="line">&#x2F;&#x2F; Read config file</span><br><span class="line">sConfig &#x3D; new Properties();</span><br><span class="line">&#x2F;&#x2F; String configFile &#x3D; DEFAULT_CONFIG_FILE;</span><br><span class="line">String configFile &#x3D; this.getClass().getResource(DEFAULT_CONFIG_FILE).getPath();</span><br><span class="line">if (System.getProperty(&quot;selenuim_config&quot;)!&#x3D;null)&#123;</span><br><span class="line">configFile &#x3D; System.getProperty(&quot;selenuim_config&quot;);</span><br><span class="line">&#125;</span><br><span class="line">sConfig.load(new FileReader(configFile));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Prepare capabilities</span><br><span class="line">sCaps &#x3D; new DesiredCapabilities();</span><br><span class="line">sCaps.setJavascriptEnabled(true);</span><br><span class="line">sCaps.setCapability(&quot;takesScreenshot&quot;, false);</span><br><span class="line"></span><br><span class="line">String driver &#x3D; sConfig.getProperty(&quot;driver&quot;, DRIVER_CHROME);</span><br><span class="line"></span><br><span class="line">ArrayList&lt;String&gt; cliArgsCap &#x3D; new ArrayList&lt;String&gt;();</span><br><span class="line">cliArgsCap.add(&quot;--web-security&#x3D;false&quot;);</span><br><span class="line">cliArgsCap.add(&quot;--ssl-protocol&#x3D;any&quot;);</span><br><span class="line">cliArgsCap.add(&quot;--ignore-ssl-errors&#x3D;true&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Start appropriate Driver</span><br><span class="line">if (driver.equals(DRIVER_FIREFOX)) &#123;</span><br><span class="line">mDriver &#x3D; new FirefoxDriver(sCaps);</span><br><span class="line">&#125; else if (driver.equals(DRIVER_CHROME)) &#123;</span><br><span class="line">mDriver &#x3D; new ChromeDriver(sCaps);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * check whether input is a valid URL</span><br><span class="line"> * </span><br><span class="line"> * @author bob.li.0718@gmail.com</span><br><span class="line"> * @param urlString urlString</span><br><span class="line"> * @return true means yes, otherwise no.</span><br><span class="line"> *&#x2F;</span><br><span class="line">private boolean isUrl(String urlString) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">new URL(urlString);</span><br><span class="line">return true;</span><br><span class="line">&#125; catch (MalformedURLException mue) &#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * store webDrivers created</span><br><span class="line"> *&#x2F;</span><br><span class="line">private List&lt;WebDriver&gt; webDriverList &#x3D; Collections</span><br><span class="line">.synchronizedList(new ArrayList&lt;WebDriver&gt;());</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * store webDrivers available</span><br><span class="line"> *&#x2F;</span><br><span class="line">private BlockingDeque&lt;WebDriver&gt; innerQueue &#x3D; new LinkedBlockingDeque&lt;WebDriver&gt;();</span><br><span class="line"></span><br><span class="line">public WebDriverPool(int capacity) &#123;</span><br><span class="line">this.capacity &#x3D; capacity;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public WebDriverPool() &#123;</span><br><span class="line">this(DEFAULT_CAPACITY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * </span><br><span class="line"> * @return</span><br><span class="line"> * @throws InterruptedException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public WebDriver get() throws InterruptedException &#123;</span><br><span class="line">checkRunning();</span><br><span class="line">WebDriver poll &#x3D; innerQueue.poll();</span><br><span class="line">if (poll !&#x3D; null) &#123;</span><br><span class="line">return poll;</span><br><span class="line">&#125;</span><br><span class="line">if (webDriverList.size() &lt; capacity) &#123;</span><br><span class="line">synchronized (webDriverList) &#123;</span><br><span class="line">if (webDriverList.size() &lt; capacity) &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; add new WebDriver instance into pool</span><br><span class="line">try &#123;</span><br><span class="line">configure();</span><br><span class="line">innerQueue.add(mDriver);</span><br><span class="line">webDriverList.add(mDriver);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return innerQueue.take();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void returnToPool(WebDriver webDriver) &#123;</span><br><span class="line">checkRunning();</span><br><span class="line">innerQueue.add(webDriver);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void checkRunning() &#123;</span><br><span class="line">if (!stat.compareAndSet(STAT_RUNNING, STAT_RUNNING)) &#123;</span><br><span class="line">throw new IllegalStateException(&quot;Already closed!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void closeAll() &#123;</span><br><span class="line">boolean b &#x3D; stat.compareAndSet(STAT_RUNNING, STAT_CLODED);</span><br><span class="line">if (!b) &#123;</span><br><span class="line">throw new IllegalStateException(&quot;Already closed!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">for (WebDriver webDriver : webDriverList) &#123;</span><br><span class="line">logger.info(&quot;Quit webDriver&quot; + webDriver);</span><br><span class="line">webDriver.quit();</span><br><span class="line">webDriver &#x3D; null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>config.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># What WebDriver to use for the tests</span><br><span class="line">#driver&#x3D;firefox</span><br><span class="line">driver&#x3D;chrome</span><br><span class="line"></span><br><span class="line">#谷歌浏览器启动程序路径</span><br><span class="line">#chrome_exec_path&#x3D;D:\chromedriver_win32\chromedriver.exe</span><br><span class="line">chrome_driver_loglevel&#x3D;DEBUG</span><br></pre></td></tr></table></figure><p>项目地址： <a href="https://github.com/born2do/crawler.git">https://github.com/born2do/crawler.git</a> </p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>Selenium 已不再支持 PhantomJS，以前还可以通过降低jar包版本的方式解决该问题，但是现在已经不行了，即使版本再低，也不会引入PhantomJS相关的jar包了，所以webmagic作者开发的webmagic-selenium已经不能再用了（好像已经很久都没有更新版本了。。。），我这里的处理是下载源码，在源码的基础上将PhantomJS的相关内容都已经剔除了。</p>]]></content>
    
    
    <summary type="html">【WebMagic】抓取前端渲染的页面</summary>
    
    
    
    <category term="爬虫" scheme="https://born2do.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="WebMagic" scheme="https://born2do.github.io/tags/WebMagic/"/>
    
  </entry>
  
  <entry>
    <title>【Java】用Java实现JS中的decodeURIComponent()函数</title>
    <link href="https://born2do.github.io/2021/03/25/%E3%80%90Java%E3%80%91%E7%94%A8Java%E5%AE%9E%E7%8E%B0JS%E4%B8%AD%E7%9A%84decodeURIComponent-%E5%87%BD%E6%95%B0/"/>
    <id>https://born2do.github.io/2021/03/25/%E3%80%90Java%E3%80%91%E7%94%A8Java%E5%AE%9E%E7%8E%B0JS%E4%B8%AD%E7%9A%84decodeURIComponent-%E5%87%BD%E6%95%B0/</id>
    <published>2021-03-25T15:06:03.000Z</published>
    <updated>2021-03-25T15:06:46.306Z</updated>
    
    <content type="html"><![CDATA[<p>为防止json数据解析出错，在B/S模式下的前后端交互中，会对数据进行编码encodeURIComponent与解码decodeURIComponent。<br>存储时将数据编码：encodeURIComponent(需要编码的数据)<br>使用时将数据解码：decodeURIComponent(需要解码的数据)</p><p>在爬取数据的过程中，对于使用AJAX进行页面数据渲染的网页，我们爬取到的数据往往会是下面的形式：<br><code>data:%7B%22mode%22%3A%22xml%22%2C%22code%22%3A%22%20%20%20%20%20%20%20%20%3Cdependency%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Coptional%3Etrue%3C%2Foptional%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fdependency%3E%5Cn%5Cn%5Cn%20%3Cbuild%3E%5Cn%20%20%20%20%20%20%20%20%3Cplugins%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Cplugin%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-maven-plugin%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fplugin%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fplugins%3E%5Cn%20%20%20%20%3C%2Fbuild%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22Wptpj%22%7D </code><br>在Java项目中，我们又该如何去对这种原内容为json数据的字符串进行解码呢？<br>网上的处理方法较多，但下面的方法最为简单：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.born2do.code;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenhy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/3/25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DecodeDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String uri = <span class="string">&quot;%7B%22mode%22%3A%22xml%22%2C%22code%22%3A%22%20%20%20%20%20%20%20%20%3Cdependency%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Coptional%3Etrue%3C%2Foptional%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fdependency%3E%5Cn%5Cn%5Cn%20%3Cbuild%3E%5Cn%20%20%20%20%20%20%20%20%3Cplugins%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Cplugin%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-maven-plugin%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fplugin%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fplugins%3E%5Cn%20%20%20%20%3C%2Fbuild%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22Wptpj%22%7D&quot;</span>;</span><br><span class="line">        String decodeStr = <span class="keyword">new</span> java.net.URI(uri).getPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;decode后的json数据为：&quot;</span> + decodeStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>decode后的json数据为：{“mode”:”xml”,”code”:”        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n\n\n <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>\n                            <groupId>org.springframework.boot</groupId>\n                            <artifactId>spring-boot-configuration-processor</artifactId>\n                        </exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>“,”heightLimit”:true,”margin”:true,”id”:”Wptpj”}</p></blockquote><p>我们再将获取到的结果进行格式化，显示如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;mode&quot;</span>: <span class="string">&quot;xml&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;code&quot;</span>: <span class="string">&quot;        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n\n\n &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;heightLimit&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;margin&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;Wptpj&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用getPath()实现完美解码。</p>]]></content>
    
    
    <summary type="html">【Java】用Java实现JS中的decodeURIComponent()函数</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="decodeURIComponent()" scheme="https://born2do.github.io/tags/decodeURIComponent/"/>
    
  </entry>
  
  <entry>
    <title>【JS】encodeURIComponent()和decodeURIComponent()</title>
    <link href="https://born2do.github.io/2021/03/25/%E3%80%90JS%E3%80%91encodeURIComponent-%E5%92%8CdecodeURIComponent/"/>
    <id>https://born2do.github.io/2021/03/25/%E3%80%90JS%E3%80%91encodeURIComponent-%E5%92%8CdecodeURIComponent/</id>
    <published>2021-03-25T15:04:29.000Z</published>
    <updated>2021-03-25T15:05:25.710Z</updated>
    
    <content type="html"><![CDATA[<p>encodeURIComponent()和decodeURIComponent()函数均为JS的全局函数，主流浏览器均支持。主要作用为编码与解码。</p><h1 id="encodeURIComponent"><a href="#encodeURIComponent" class="headerlink" title="encodeURIComponent()"></a>encodeURIComponent()</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>encodeURIComponent() 函数可把字符串作为 URI 组件进行编码。</p><p>该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * ‘ ( ) 。</p><p>其他字符（比如 ：;/?:@&amp;=+$,# 这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">encodeURIComponent</span>(uri)</span><br></pre></td></tr></table></figure><p>说明：uri，必需。一个字符串，含有 URI 组件或其他要编码的文本。</p><h1 id="decodeURIComponent"><a href="#decodeURIComponent" class="headerlink" title="decodeURIComponent()"></a>decodeURIComponent()</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>decodeURIComponent() 函数可对 encodeURIComponent() 函数编码的 URI 进行解码。</p><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">decodeURIComponent</span>(uri)</span><br></pre></td></tr></table></figure><p>说明：uri，必需。一个字符串，含有编码 URI 组件或其他要解码的文本。</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;encodeAndDecode&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var uri&#x3D;&quot;https:&#x2F;&#x2F;www.born2do.com&#x2F;&quot;;</span><br><span class="line">document.write(&quot;uri &#x3D; &quot; + uri);</span><br><span class="line">document.write(&quot;&lt;br&gt;&quot;);</span><br><span class="line">var uri_encode&#x3D;encodeURIComponent(uri);</span><br><span class="line">document.write(&quot;encode &#x3D; &quot; + uri_encode);</span><br><span class="line">document.write(&quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(&quot;decode &#x3D; &quot; + decodeURIComponent(uri_encode));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>uri = <a href="https://www.born2do.com/">https://www.born2do.com/</a><br>encode = https%3A%2F%2F<a href="http://www.born2do.com%2F">www.born2do.com%2F</a><br>decode = <a href="https://www.born2do.com/">https://www.born2do.com/</a></p></blockquote>]]></content>
    
    
    <summary type="html">【JS】encodeURIComponent()和decodeURIComponent()</summary>
    
    
    
    <category term="JS" scheme="https://born2do.github.io/categories/JS/"/>
    
    
    <category term="encodeURIComponent()" scheme="https://born2do.github.io/tags/encodeURIComponent/"/>
    
    <category term="decodeURIComponent()" scheme="https://born2do.github.io/tags/decodeURIComponent/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】在shell脚本中获取当前主机的主机名以及IP地址</title>
    <link href="https://born2do.github.io/2021/03/15/%E3%80%90Linux%E3%80%91%E5%9C%A8shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D%E4%BB%A5%E5%8F%8AIP%E5%9C%B0%E5%9D%80/"/>
    <id>https://born2do.github.io/2021/03/15/%E3%80%90Linux%E3%80%91%E5%9C%A8shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D%E4%BB%A5%E5%8F%8AIP%E5%9C%B0%E5%9D%80/</id>
    <published>2021-03-15T13:10:25.000Z</published>
    <updated>2021-03-15T13:10:56.789Z</updated>
    
    <content type="html"><![CDATA[<p>在命令行模式下，获取当前主机名称：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>在命令行模式下，获取IP地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>在shell脚本中获取当前主机的主机名以及IP地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo `hostname`</span><br><span class="line">echo `ifconfig | grep -A1 &quot;eth0&quot; | grep &#x27;inet addr&#x27; |awk -F &#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;|awk &#x27;&#123;print $1&#125;&#x27;`</span><br></pre></td></tr></table></figure><p>说明：<br>`` 表示执行该语句，并返回执行后的结果；<br>grep -A1 “eth0” 表示找出带有“eth0”的行，输出中除显示该行外，还显示之后的一行；<br>awk 则是进行分割。</p>]]></content>
    
    
    <summary type="html">【Linux】在shell脚本中获取当前主机的主机名以及IP地址</summary>
    
    
    
    <category term="Linux" scheme="https://born2do.github.io/categories/Linux/"/>
    
    
    <category term="shell" scheme="https://born2do.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>db2中的SYSIBM.SYSDUMMY1</title>
    <link href="https://born2do.github.io/2021/03/14/db2%E4%B8%AD%E7%9A%84SYSIBM-SYSDUMMY1/"/>
    <id>https://born2do.github.io/2021/03/14/db2%E4%B8%AD%E7%9A%84SYSIBM-SYSDUMMY1/</id>
    <published>2021-03-14T13:40:57.000Z</published>
    <updated>2021-03-14T13:41:32.255Z</updated>
    
    <content type="html"><![CDATA[<p>SYSIBM.SYSDUMMY1是db2数据库中的一张系统表，用来存储系统的相关信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--获取当前系统日期</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURRENT</span> <span class="type">DATE</span> <span class="keyword">FROM</span> SYSIBM.SYSDUMMY1;</span><br><span class="line"><span class="comment">--获取库表MYSEQ的序列值</span></span><br><span class="line"><span class="keyword">SELECT</span> NEXTVAL <span class="keyword">FOR</span> MYSEQ <span class="keyword">FROM</span> SYSIBM.SYSDUMMY1;</span><br><span class="line"><span class="comment">--执行数学运算</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">FROM</span> SYSIBM.SYSDUMMY1;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">db2中的SYSIBM.SYSDUMMY1</summary>
    
    
    
    <category term="数据库" scheme="https://born2do.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="DB2" scheme="https://born2do.github.io/tags/DB2/"/>
    
  </entry>
  
</feed>
