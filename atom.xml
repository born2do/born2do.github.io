<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenHY的个人博客</title>
  
  
  <link href="https://born2do.github.io/atom.xml" rel="self"/>
  
  <link href="https://born2do.github.io/"/>
  <updated>2021-03-25T15:06:46.306Z</updated>
  <id>https://born2do.github.io/</id>
  
  <author>
    <name>chenhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Java】用Java实现JS中的decodeURIComponent()函数</title>
    <link href="https://born2do.github.io/2021/03/25/%E3%80%90Java%E3%80%91%E7%94%A8Java%E5%AE%9E%E7%8E%B0JS%E4%B8%AD%E7%9A%84decodeURIComponent-%E5%87%BD%E6%95%B0/"/>
    <id>https://born2do.github.io/2021/03/25/%E3%80%90Java%E3%80%91%E7%94%A8Java%E5%AE%9E%E7%8E%B0JS%E4%B8%AD%E7%9A%84decodeURIComponent-%E5%87%BD%E6%95%B0/</id>
    <published>2021-03-25T15:06:03.000Z</published>
    <updated>2021-03-25T15:06:46.306Z</updated>
    
    <content type="html"><![CDATA[<p>为防止json数据解析出错，在B/S模式下的前后端交互中，会对数据进行编码encodeURIComponent与解码decodeURIComponent。<br>存储时将数据编码：encodeURIComponent(需要编码的数据)<br>使用时将数据解码：decodeURIComponent(需要解码的数据)</p><p>在爬取数据的过程中，对于使用AJAX进行页面数据渲染的网页，我们爬取到的数据往往会是下面的形式：<br><code>data:%7B%22mode%22%3A%22xml%22%2C%22code%22%3A%22%20%20%20%20%20%20%20%20%3Cdependency%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Coptional%3Etrue%3C%2Foptional%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fdependency%3E%5Cn%5Cn%5Cn%20%3Cbuild%3E%5Cn%20%20%20%20%20%20%20%20%3Cplugins%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Cplugin%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-maven-plugin%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fplugin%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fplugins%3E%5Cn%20%20%20%20%3C%2Fbuild%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22Wptpj%22%7D </code><br>在Java项目中，我们又该如何去对这种原内容为json数据的字符串进行解码呢？<br>网上的处理方法较多，但下面的方法最为简单：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.born2do.code;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenhy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/3/25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DecodeDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String uri = <span class="string">&quot;%7B%22mode%22%3A%22xml%22%2C%22code%22%3A%22%20%20%20%20%20%20%20%20%3Cdependency%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Coptional%3Etrue%3C%2Foptional%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fdependency%3E%5Cn%5Cn%5Cn%20%3Cbuild%3E%5Cn%20%20%20%20%20%20%20%20%3Cplugins%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Cplugin%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-maven-plugin%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CgroupId%3Eorg.springframework.boot%3C%2FgroupId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3CartifactId%3Espring-boot-configuration-processor%3C%2FartifactId%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexclude%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fexcludes%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fconfiguration%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fplugin%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fplugins%3E%5Cn%20%20%20%20%3C%2Fbuild%3E%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22Wptpj%22%7D&quot;</span>;</span><br><span class="line">        String decodeStr = <span class="keyword">new</span> java.net.URI(uri).getPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;decode后的json数据为：&quot;</span> + decodeStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>decode后的json数据为：{“mode”:”xml”,”code”:”        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n\n\n <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>\n                            <groupId>org.springframework.boot</groupId>\n                            <artifactId>spring-boot-configuration-processor</artifactId>\n                        </exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>“,”heightLimit”:true,”margin”:true,”id”:”Wptpj”}</p></blockquote><p>我们再将获取到的结果进行格式化，显示如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;mode&quot;</span>: <span class="string">&quot;xml&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;code&quot;</span>: <span class="string">&quot;        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n\n\n &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;heightLimit&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;margin&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;Wptpj&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用getPath()实现完美解码。</p>]]></content>
    
    
    <summary type="html">【Java】用Java实现JS中的decodeURIComponent()函数</summary>
    
    
    
    <category term="Java" scheme="https://born2do.github.io/categories/Java/"/>
    
    
    <category term="decodeURIComponent()" scheme="https://born2do.github.io/tags/decodeURIComponent/"/>
    
  </entry>
  
  <entry>
    <title>【JS】encodeURIComponent()和decodeURIComponent()</title>
    <link href="https://born2do.github.io/2021/03/25/%E3%80%90JS%E3%80%91encodeURIComponent-%E5%92%8CdecodeURIComponent/"/>
    <id>https://born2do.github.io/2021/03/25/%E3%80%90JS%E3%80%91encodeURIComponent-%E5%92%8CdecodeURIComponent/</id>
    <published>2021-03-25T15:04:29.000Z</published>
    <updated>2021-03-25T15:05:25.710Z</updated>
    
    <content type="html"><![CDATA[<p>encodeURIComponent()和decodeURIComponent()函数均为JS的全局函数，主流浏览器均支持。主要作用为编码与解码。</p><h1 id="encodeURIComponent"><a href="#encodeURIComponent" class="headerlink" title="encodeURIComponent()"></a>encodeURIComponent()</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>encodeURIComponent() 函数可把字符串作为 URI 组件进行编码。</p><p>该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * ‘ ( ) 。</p><p>其他字符（比如 ：;/?:@&amp;=+$,# 这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">encodeURIComponent</span>(uri)</span><br></pre></td></tr></table></figure><p>说明：uri，必需。一个字符串，含有 URI 组件或其他要编码的文本。</p><h1 id="decodeURIComponent"><a href="#decodeURIComponent" class="headerlink" title="decodeURIComponent()"></a>decodeURIComponent()</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>decodeURIComponent() 函数可对 encodeURIComponent() 函数编码的 URI 进行解码。</p><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">decodeURIComponent</span>(uri)</span><br></pre></td></tr></table></figure><p>说明：uri，必需。一个字符串，含有编码 URI 组件或其他要解码的文本。</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;encodeAndDecode&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var uri&#x3D;&quot;https:&#x2F;&#x2F;www.born2do.com&#x2F;&quot;;</span><br><span class="line">document.write(&quot;uri &#x3D; &quot; + uri);</span><br><span class="line">document.write(&quot;&lt;br&gt;&quot;);</span><br><span class="line">var uri_encode&#x3D;encodeURIComponent(uri);</span><br><span class="line">document.write(&quot;encode &#x3D; &quot; + uri_encode);</span><br><span class="line">document.write(&quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(&quot;decode &#x3D; &quot; + decodeURIComponent(uri_encode));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>uri = <a href="https://www.born2do.com/">https://www.born2do.com/</a><br>encode = https%3A%2F%2F<a href="http://www.born2do.com%2F">www.born2do.com%2F</a><br>decode = <a href="https://www.born2do.com/">https://www.born2do.com/</a></p></blockquote>]]></content>
    
    
    <summary type="html">【JS】encodeURIComponent()和decodeURIComponent()</summary>
    
    
    
    <category term="JS" scheme="https://born2do.github.io/categories/JS/"/>
    
    
    <category term="encodeURIComponent()" scheme="https://born2do.github.io/tags/encodeURIComponent/"/>
    
    <category term="decodeURIComponent()" scheme="https://born2do.github.io/tags/decodeURIComponent/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】在shell脚本中获取当前主机的主机名以及IP地址</title>
    <link href="https://born2do.github.io/2021/03/15/%E3%80%90Linux%E3%80%91%E5%9C%A8shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D%E4%BB%A5%E5%8F%8AIP%E5%9C%B0%E5%9D%80/"/>
    <id>https://born2do.github.io/2021/03/15/%E3%80%90Linux%E3%80%91%E5%9C%A8shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D%E4%BB%A5%E5%8F%8AIP%E5%9C%B0%E5%9D%80/</id>
    <published>2021-03-15T13:10:25.000Z</published>
    <updated>2021-03-15T13:10:56.789Z</updated>
    
    <content type="html"><![CDATA[<p>在命令行模式下，获取当前主机名称：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>在命令行模式下，获取IP地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>在shell脚本中获取当前主机的主机名以及IP地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo `hostname`</span><br><span class="line">echo `ifconfig | grep -A1 &quot;eth0&quot; | grep &#x27;inet addr&#x27; |awk -F &#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;|awk &#x27;&#123;print $1&#125;&#x27;`</span><br></pre></td></tr></table></figure><p>说明：<br>`` 表示执行该语句，并返回执行后的结果；<br>grep -A1 “eth0” 表示找出带有“eth0”的行，输出中除显示该行外，还显示之后的一行；<br>awk 则是进行分割。</p>]]></content>
    
    
    <summary type="html">【Linux】在shell脚本中获取当前主机的主机名以及IP地址</summary>
    
    
    
    <category term="Linux" scheme="https://born2do.github.io/categories/Linux/"/>
    
    
    <category term="shell" scheme="https://born2do.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>db2中的SYSIBM.SYSDUMMY1</title>
    <link href="https://born2do.github.io/2021/03/14/db2%E4%B8%AD%E7%9A%84SYSIBM-SYSDUMMY1/"/>
    <id>https://born2do.github.io/2021/03/14/db2%E4%B8%AD%E7%9A%84SYSIBM-SYSDUMMY1/</id>
    <published>2021-03-14T13:40:57.000Z</published>
    <updated>2021-03-14T13:41:32.255Z</updated>
    
    <content type="html"><![CDATA[<p>SYSIBM.SYSDUMMY1是db2数据库中的一张系统表，用来存储系统的相关信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--获取当前系统日期</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURRENT</span> <span class="type">DATE</span> <span class="keyword">FROM</span> SYSIBM.SYSDUMMY1;</span><br><span class="line"><span class="comment">--获取库表MYSEQ的序列值</span></span><br><span class="line"><span class="keyword">SELECT</span> NEXTVAL <span class="keyword">FOR</span> MYSEQ <span class="keyword">FROM</span> SYSIBM.SYSDUMMY1;</span><br><span class="line"><span class="comment">--执行数学运算</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">FROM</span> SYSIBM.SYSDUMMY1;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">db2中的SYSIBM.SYSDUMMY1</summary>
    
    
    
    <category term="数据库" scheme="https://born2do.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="DB2" scheme="https://born2do.github.io/tags/DB2/"/>
    
  </entry>
  
  <entry>
    <title>Method com/mchange/v2/c3p0/impl/NewProxyPreparedStatement.isClosed()Z is abstract</title>
    <link href="https://born2do.github.io/2021/03/12/Method-com-mchange-v2-c3p0-impl-NewProxyPreparedStatement-isClosed-Z-is-abstract/"/>
    <id>https://born2do.github.io/2021/03/12/Method-com-mchange-v2-c3p0-impl-NewProxyPreparedStatement-isClosed-Z-is-abstract/</id>
    <published>2021-03-12T14:26:14.000Z</published>
    <updated>2021-03-12T14:27:08.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>学习B站上的SSM项目，使用c3p0连接池，报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java.lang.AbstractMethodError: Method com&#x2F;mchange&#x2F;v2&#x2F;c3p0&#x2F;impl&#x2F;NewProxyPreparedStatement.isClosed()Z is abstract</span><br><span class="line"></span><br><span class="line">at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.isClosed(NewProxyPreparedStatement.java)</span><br><span class="line">at org.apache.ibatis.executor.BaseExecutor.closeStatement(BaseExecutor.java:285)</span><br><span class="line">at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>使用的c3p0的相关jar包版本过低。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>将c3p0-0.9.1.2.jar 换成 c3p0-0.9.5.2.jar或更高版本。</p>]]></content>
    
    
    <summary type="html">Method com/mchange/v2/c3p0/impl/NewProxyPreparedStatement.isClosed()Z is abstract</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="c3p0" scheme="https://born2do.github.io/tags/c3p0/"/>
    
  </entry>
  
  <entry>
    <title>【linux】取消默认断开时间</title>
    <link href="https://born2do.github.io/2021/03/12/%E3%80%90linux%E3%80%91%E5%8F%96%E6%B6%88%E9%BB%98%E8%AE%A4%E6%96%AD%E5%BC%80%E6%97%B6%E9%97%B4/"/>
    <id>https://born2do.github.io/2021/03/12/%E3%80%90linux%E3%80%91%E5%8F%96%E6%B6%88%E9%BB%98%E8%AE%A4%E6%96%AD%E5%BC%80%E6%97%B6%E9%97%B4/</id>
    <published>2021-03-12T14:25:09.000Z</published>
    <updated>2021-03-12T14:27:14.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>新买的阿里云服务器，使用putty连接上后，长时间没操作就断开了。关键你又要重新连接，这就很烦！！！</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>超时断开是系统的配置，修改下配置文件就好。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>使用root用户登录服务器</p><ul><li>查看系统是否设置了TMOUT参数<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$TMOUT</span></span></span><br></pre></td></tr></table></figure>如果输出空或0表示不超时，大于0的数字n表示n秒没有输入则超时断开。</li><li>修改配置文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/profile</span></span><br></pre></td></tr></table></figure>修改TMOUT=0后保存。</li><li>刷新系统配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure></li><li>超时断开问题解决。</li></ul><h1 id="source命令简介"><a href="#source命令简介" class="headerlink" title="source命令简介"></a>source命令简介</h1><blockquote><p>source命令用法：source FileName<br>作用：在当前bash环境下读取并执行FileName中的命令。<br>注：该命令通常用命令”.”来替代。</p></blockquote>]]></content>
    
    
    <summary type="html">【linux】取消默认断开时间</summary>
    
    
    
    <category term="linux" scheme="https://born2do.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://born2do.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】查看当前系统默认的shell解释器，修改默认解释器</title>
    <link href="https://born2do.github.io/2021/03/12/%E3%80%90Linux%E3%80%91%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E7%9A%84shell%E8%A7%A3%E9%87%8A%E5%99%A8%EF%BC%8C%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E8%A7%A3%E9%87%8A%E5%99%A8/"/>
    <id>https://born2do.github.io/2021/03/12/%E3%80%90Linux%E3%80%91%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E7%9A%84shell%E8%A7%A3%E9%87%8A%E5%99%A8%EF%BC%8C%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E8%A7%A3%E9%87%8A%E5%99%A8/</id>
    <published>2021-03-12T14:24:02.000Z</published>
    <updated>2021-03-12T14:24:48.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看系统当前支持哪些shell解释器"><a href="#查看系统当前支持哪些shell解释器" class="headerlink" title="查看系统当前支持哪些shell解释器"></a>查看系统当前支持哪些shell解释器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@Administrator:~# cat  &#x2F;etc&#x2F;shells</span><br><span class="line"># &#x2F;etc&#x2F;shells: valid login shells</span><br><span class="line">&#x2F;bin&#x2F;sh</span><br><span class="line">&#x2F;bin&#x2F;bash</span><br><span class="line">&#x2F;bin&#x2F;rbash</span><br><span class="line">&#x2F;bin&#x2F;dash</span><br></pre></td></tr></table></figure><h1 id="查看系统当前默认的shell解释器"><a href="#查看系统当前默认的shell解释器" class="headerlink" title="查看系统当前默认的shell解释器"></a>查看系统当前默认的shell解释器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@Administrator:~# echo $0</span><br><span class="line">-bash</span><br><span class="line">root@Administrator:~# echo $SHELL</span><br><span class="line">&#x2F;bin&#x2F;bash</span><br><span class="line">root@Administrator:~# env | grep SHELL</span><br><span class="line">SHELL&#x3D;&#x2F;bin&#x2F;bash</span><br><span class="line">root@Administrator:~# ps -p $$</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line"> 1091 pts&#x2F;1    00:00:00 bash</span><br></pre></td></tr></table></figure><h1 id="修改默认的shell解释器"><a href="#修改默认的shell解释器" class="headerlink" title="修改默认的shell解释器"></a>修改默认的shell解释器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@Administrator:~# chsh -s &#x2F;bin&#x2F;sh</span><br><span class="line">root@Administrator:~# chsh</span><br><span class="line">Changing the login shell for root</span><br><span class="line">Enter the new value, or press ENTER for the default</span><br><span class="line">        Login Shell [&#x2F;bin&#x2F;sh]: &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>说明：修改了系统默认shell之后不会立即生效，之后再次登录系统修改的shell才会生效。</p>]]></content>
    
    
    <summary type="html">【Linux】查看当前系统默认的shell解释器，修改默认解释器</summary>
    
    
    
    <category term="Linux" scheme="https://born2do.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://born2do.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Java代码注释规约及eclipse相关配置</title>
    <link href="https://born2do.github.io/2021/03/11/Java%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A%E8%A7%84%E7%BA%A6%E5%8F%8Aeclipse%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    <id>https://born2do.github.io/2021/03/11/Java%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A%E8%A7%84%E7%BA%A6%E5%8F%8Aeclipse%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-11T12:31:20.000Z</published>
    <updated>2021-03-11T12:32:06.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java代码注释规约"><a href="#Java代码注释规约" class="headerlink" title="Java代码注释规约"></a>Java代码注释规约</h1><p>1.【强制】类、类属性、类方法的注释必须使用Javadoc规范，使用 <code>/** 内容 */</code> 格式，不得使用 <code>// xxx</code> 方式。<br>说明：在IDE编辑窗口中，Javadoc方式会提示相关注释，生成Javadoc可以正确输出相应注释；在IDE中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高阅读效率。<br>2.【强制】所有的抽象方法（包括接口中的方法）必须要用Javadoc注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能。<br>说明：对子类的实现要求，或者调用注意事项，请一并说明。<br>3.【强制】所有的类都必须添加创建者和创建日期。<br>4.【强制】方法内部单行注释，在被注释语句上方另起一行，使用 <code>//</code> 注释。方法内部多行注释使用 <code>/* */</code> 注释，注意与代码对齐。<br>5.【强制】所有的枚举类型字段必须要有注释，说明每个数据项的用途。<br>6.【推荐】与其“半吊子”英文来注释，不如用中文注释把问题说清楚。专有名词与关键字保持英文原文即可。<br>反例：“TCP连接超时”解释成“传输控制协议连接超时”，理解反而费脑筋。<br>7.【推荐】代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑等的修改。<br>说明：代码与注释更新不同步，就像路网与导航软件更新不同步一样，如果导航软件严重滞后，就失去了导航的意义。<br>8.【参考】谨慎注释掉代码。在上方详细说明，而不是简单地注释掉。如果无用，则删除。<br>说明：代码被注释掉有两种可能性：1）后续会恢复此段代码逻辑。2）永久不用。前者如果没有备注信息，难以知晓注释动机。后者建议直接删掉（代码仓库保存了历史代码）。<br>9.【参考】对于注释的要求：第一、能够准确反应设计思想和代码逻辑；第二、能够描述业务含义，使别的程序员能够迅速了解到代码背后的信息。完全没有注释的大段代码对于阅读者形同天书，注释是给自己看的，即使隔很长时间，也能清晰理解当时的思路；注释也是给继任者看的，使其能够快速接替自己的工作。<br>10.【参考】好的命名、代码结构是自解释的，注释力求精简准确、表达到位。避免出现注释的一个极端：过多过滥的注释，代码的逻辑一旦修改，修改注释是相当大的负担。<br>反例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// put elephant into fridge</span></span><br><span class="line">put(elephant, fridge);</span><br></pre></td></tr></table></figure><p>方法名put，加上两个有意义的变量名elephant和fridge，已经说明了这是在干什么，语义清晰的代码不需要额外的注释。<br>11.【参考】特殊注释标记，请注明标记人与标记时间。注意及时处理这些标记，通过标记扫描，经常清理此类标记。线上故障有时候就是来源于这些标记处的代码。<br>1）待办事宜（TODO）:（ 标记人，标记时间，[预计处理时间]）<br>表示需要实现，但目前还未实现的功能。这实际上是一个Javadoc的标签，目前的Javadoc还没有实现，但已经被广泛使用。只能应用于类，接口和方法（因为它是一个Javadoc标签）。<br>2）错误，不能工作（FIXME）:（标记人，标记时间，[预计处理时间]）<br>在注释中用FIXME标记某代码是错误的，而且不能工作，需要及时纠正的情况。</p><h1 id="eclipse相关配置"><a href="#eclipse相关配置" class="headerlink" title="eclipse相关配置"></a>eclipse相关配置</h1><p>Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates-&gt;Comments-&gt;</p><h2 id="类、接口"><a href="#类、接口" class="headerlink" title="类、接口"></a>类、接口</h2><p>Types-&gt;edit<br>填入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * $&#123;tags&#125;</span><br><span class="line"> * @author $&#123;user&#125;</span><br><span class="line"> * @date $&#123;date&#125;</span><br><span class="line"> *&#x2F;</span><br></pre></td></tr></table></figure><h2 id="方法体"><a href="#方法体" class="headerlink" title="方法体"></a>方法体</h2><p>Methods-&gt;edit<br>填入以下内容（一般会有默认格式，无需修改）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * $&#123;tags&#125;</span><br><span class="line"> *&#x2F;</span><br></pre></td></tr></table></figure><h2 id="修改保存"><a href="#修改保存" class="headerlink" title="修改保存"></a>修改保存</h2><p>修改后勾选下方的“Automatically add commects for new methods,types……”，然后点击“Apply and Close”即可。<br>说明：<br>1）以上修改的部分为强制内容，必须填写！！！也可自行额外添加其他标签内容。<br>2）接口或抽象类的JavaDoc必须填写，实现类中对接口或是抽象类的重写方法的JavaDoc可以不写，只要有<code>@Override</code>注解即可。</p>]]></content>
    
    
    <summary type="html">Java代码注释规约及eclipse相关配置</summary>
    
    
    
    <category term="规约" scheme="https://born2do.github.io/categories/%E8%A7%84%E7%BA%A6/"/>
    
    
    <category term="Java" scheme="https://born2do.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】crontab定时任务</title>
    <link href="https://born2do.github.io/2021/03/10/%E3%80%90Linux%E3%80%91crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://born2do.github.io/2021/03/10/%E3%80%90Linux%E3%80%91crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</id>
    <published>2021-03-10T12:43:35.000Z</published>
    <updated>2021-03-10T12:44:12.919Z</updated>
    
    <content type="html"><![CDATA[<p>Linux crontab是用来定期执行程序的命令。 </p><ul><li>查看定时任务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure></li><li>编辑定时任务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></li><li>删除定时任务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -d</span><br></pre></td></tr></table></figure>说明：以上几个命令均没有添加用户角色信息，默认为编辑当前用户的crontab定时任务。</li></ul><p>crontab内容格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f1 f2 f3 f4 f5 program</span><br></pre></td></tr></table></figure><p>其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。</p><ul><li>当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，其余类推</li><li>当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其余类推</li><li>当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，其余类推</li><li>当 f1 为 a, b, c,… 时表示第 a, b, c,… 分钟要执行，f2 为 a, b, c,… 时表示第 a, b, c…个小时要执行，其余类推<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*    *    *    *    *</span><br><span class="line">-    -    -    -    -</span><br><span class="line">|    |    |    |    |</span><br><span class="line">|    |    |    |    +----- 星期中星期几 (0 - 6) (星期天 为0)</span><br><span class="line">|    |    |    +---------- 月份 (1 - 12) </span><br><span class="line">|    |    +--------------- 一个月中的第几天 (1 - 31)</span><br><span class="line">|    +-------------------- 小时 (0 - 23)</span><br><span class="line">+------------------------- 分钟 (0 - 59)</span><br></pre></td></tr></table></figure></li></ul><p>eg：</p><ul><li>每一分钟执行一次 /bin/ls<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * &#x2F;bin&#x2F;ls</span><br></pre></td></tr></table></figure></li><li>在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 /usr/bin/backup<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 6-12&#x2F;3 * 12 * &#x2F;usr&#x2F;bin&#x2F;backup</span><br></pre></td></tr></table></figure></li><li>每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分….执行 echo “haha”<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20 0-23&#x2F;2 * * * echo &quot;haha&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">【Linux】crontab定时任务</summary>
    
    
    
    <category term="Linux" scheme="https://born2do.github.io/categories/Linux/"/>
    
    
    <category term="crontab" scheme="https://born2do.github.io/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title>【Excel】使用小tips</title>
    <link href="https://born2do.github.io/2021/03/10/%E3%80%90Excel%E3%80%91%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/"/>
    <id>https://born2do.github.io/2021/03/10/%E3%80%90Excel%E3%80%91%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/</id>
    <published>2021-03-10T12:42:32.000Z</published>
    <updated>2021-03-10T12:43:16.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速填充"><a href="#快速填充" class="headerlink" title="快速填充"></a>快速填充</h1><ul><li>在第一个单元格写好公式</li><li>选中第一个单元格到本列的最后一行</li><li>将光标移动到公式栏，然后按下组合键ctrl+enter</li><li>全部填充完毕</li></ul><h1 id="列查找VLOOKUP函数"><a href="#列查找VLOOKUP函数" class="headerlink" title="列查找VLOOKUP函数"></a>列查找VLOOKUP函数</h1><p>VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])<br>VLOOKUP(查找值，查找范围，查找列数，精确匹配或者近似匹配）</p>]]></content>
    
    
    <summary type="html">【Excel】使用小tips</summary>
    
    
    
    <category term="Excel" scheme="https://born2do.github.io/categories/Excel/"/>
    
    
    <category term="Excel" scheme="https://born2do.github.io/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】使用find命令清理指定时间之前的文件</title>
    <link href="https://born2do.github.io/2021/03/09/%E3%80%90Linux%E3%80%91%E4%BD%BF%E7%94%A8find%E5%91%BD%E4%BB%A4%E6%B8%85%E7%90%86%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E4%B9%8B%E5%89%8D%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://born2do.github.io/2021/03/09/%E3%80%90Linux%E3%80%91%E4%BD%BF%E7%94%A8find%E5%91%BD%E4%BB%A4%E6%B8%85%E7%90%86%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E4%B9%8B%E5%89%8D%E7%9A%84%E6%96%87%E4%BB%B6/</id>
    <published>2021-03-09T12:39:45.000Z</published>
    <updated>2021-03-09T12:40:26.057Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/logs -<span class="built_in">type</span> f -name <span class="string">&quot;*&quot;</span> -mtime +7 -<span class="built_in">exec</span> rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>说明：<br>find 后面紧跟的<code>/root/logs</code>是要查找的目录，.  表示当前目录<br><code>-type f</code>：指定查找对象为文件<br><code>-name &quot;*&quot;</code>：指定查找对象名称为任意<br><code>-mtime +7</code>：查找7天以前的老文件<br><code>-exec rm -f &#123;&#125; \;</code>：执行删除命令，后面有个 <code>&#123;&#125; \;</code> 是必须的</p><ul><li>扩展<br>如果想要定期执行该命令，可以将该命令放到脚本中，然后再使用crontab定时任务进行执行操作。</li></ul>]]></content>
    
    
    <summary type="html">【Linux】使用find命令清理指定时间之前的文件</summary>
    
    
    
    <category term="shell" scheme="https://born2do.github.io/categories/shell/"/>
    
    
    <category term="find" scheme="https://born2do.github.io/tags/find/"/>
    
  </entry>
  
  <entry>
    <title>开源/免费工具</title>
    <link href="https://born2do.github.io/2021/03/09/%E5%BC%80%E6%BA%90-%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7/"/>
    <id>https://born2do.github.io/2021/03/09/%E5%BC%80%E6%BA%90-%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7/</id>
    <published>2021-03-09T12:38:24.000Z</published>
    <updated>2021-03-09T12:39:22.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h1><ul><li>PuTTY<br>官网： <a href="https://www.putty.org/">https://www.putty.org/</a> </li><li>MTPUTTY （未找到相关licence，但官网表示一切免费）<br>官网： <a href="https://ttyplus.com/">https://ttyplus.com/</a> </li><li>FinalShell（并非开源，仅通用版免费使用）<br>官网： <a href="http://www.hostbuf.com/">http://www.hostbuf.com/</a> </li></ul><h1 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h1><ul><li>WinSCP<br>官网： <a href="https://winscp.net/">https://winscp.net/</a> </li></ul><h1 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h1><ul><li>Notepad++<br>官网： <a href="https://notepad-plus-plus.org/">https://notepad-plus-plus.org/</a></li><li>Typora （并非开源，但免费）<br>官网： <a href="https://www.typora.io/">https://www.typora.io/</a></li></ul><h1 id="集成开发环境IDE"><a href="#集成开发环境IDE" class="headerlink" title="集成开发环境IDE"></a>集成开发环境IDE</h1><ul><li>Eclipse<br>官网： <a href="https://www.eclipse.org/">https://www.eclipse.org/</a> </li></ul><h1 id="数据库连接工具"><a href="#数据库连接工具" class="headerlink" title="数据库连接工具"></a>数据库连接工具</h1><ul><li>DBeaver（社区版免费）<br>官网： <a href="https://dbeaver.io/">https://dbeaver.io/</a></li></ul><h1 id="数据库模型建模工具"><a href="#数据库模型建模工具" class="headerlink" title="数据库模型建模工具"></a>数据库模型建模工具</h1><ul><li>PDMan<br>官网： <a href="http://www.pdman.cn/">http://www.pdman.cn/</a> </li></ul><h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><ul><li>火狐<br>官网： <a href="http://www.firefox.com.cn/">http://www.firefox.com.cn/</a> </li></ul><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><ul><li>MySQL<br>官网： <a href="https://www.mysql.com/">https://www.mysql.com/</a> </li></ul><h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><ul><li>Apache Tomcat<br>官网： <a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></li></ul><h1 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h1><ul><li>PicGo<br>官网： <a href="https://picgo.github.io/PicGo-Doc/">https://picgo.github.io/PicGo-Doc/</a></li></ul><h1 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="版本控制系统"></a>版本控制系统</h1><ul><li>Git<br>官网： <a href="https://git-scm.com/">https://git-scm.com/</a> </li><li>TortoiseSVN<br>官网： <a href="https://tortoisesvn.net/">https://tortoisesvn.net/</a> </li></ul>]]></content>
    
    
    <summary type="html">开源/免费工具</summary>
    
    
    
    <category term="工具" scheme="https://born2do.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="开源" scheme="https://born2do.github.io/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="https://born2do.github.io/2021/03/08/Markdown/"/>
    <id>https://born2do.github.io/2021/03/08/Markdown/</id>
    <published>2021-03-08T13:28:06.000Z</published>
    <updated>2021-03-08T13:28:39.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>目前，主流的markdown编辑器有Typora、MarkdownPad（需要安装插件）、Atom等，但我比较中意Typora，无需安装任何插件，即装即用，轻量级软件，用起来得心应手。</p><p>Typora官网：<a href="https://www.typora.io/">https://www.typora.io/</a></p><p>百度网盘：</p><p>链接：<a href="https://pan.baidu.com/s/1KrC2BoSP2_MBseaQ4Q0BZA">https://pan.baidu.com/s/1KrC2BoSP2_MBseaQ4Q0BZA</a><br>提取码：3vyw</p><p>以下介绍，请复制内容到typora或其他编辑器查看效果。</p><p>对于部分样式，存在多种书写形式，建议只记一种，保持行文规范。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个 <strong>#</strong> 号，二级标题对应两个 <strong>#</strong> 号，以此类推。注意：<code>#</code>号与标题内容之间要保留一个空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">#### 四级标题</span><br><span class="line"></span><br><span class="line">##### 五级标题</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br><span class="line">####### 别想了，没有七级标题</span><br></pre></td></tr></table></figure><h2 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>Typora中直接回车即可换行。其他编译器，两个或两个以上空格加回车，即可换行。</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <code>~~</code> 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~www.aliyun.com~</span><br></pre></td></tr></table></figure><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>通过HTML的<code>&lt;u&gt;</code>标签来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[^要注明的文本]</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用星号(*<strong>**)、加号(</strong>+<strong>)或是减号(</strong>-**)作为列表标记。注意，符号与文字间要空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line"></span><br><span class="line">+ 第一项</span><br><span class="line">+ 第二项</span><br><span class="line">+ 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br></pre></td></tr></table></figure><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>使用数字并加上<code>.</code>号来表示。注意，符号与文字间要空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>只需在子列表中的选项添加四个空格即可。（使用tab键也可，会有不同效果）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">2. 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><h3 id="区块-1"><a href="#区块-1" class="headerlink" title="区块"></a>区块</h3><p>区块引用在段落开头使用 <code>&gt;</code> 符号 ，然后后面紧跟一个空格符号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是区块，不信你试试</span><br></pre></td></tr></table></figure><h3 id="区块嵌套"><a href="#区块嵌套" class="headerlink" title="区块嵌套"></a>区块嵌套</h3><p>区块可以嵌套，增加<code>&gt;</code>即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure><h3 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块中使用列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br><span class="line">&gt; + 第三项</span><br></pre></td></tr></table></figure><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">    &gt; 区块一</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h3><p>少量片段，使用一对反单引号（``）即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;System.out.println();&#96;</span><br></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>用一对 （```） 包裹一段代码，并指定一种语言（也可以不指定）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>这就是代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接使用方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>Markdown 图片语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line"></span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><p>Typora中，快捷键<code>ctrl</code>+<code>shift</code>+<code>i</code>，即可快速插入图片。</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><p>对齐方式：</p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>举例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>表格是markdown的一大痛点，简单的合并单元格都不行（实际上借助其他插件是可以的，就是太麻烦）。个人建议，需要用到表格的时候，直接右键-&gt;插入-&gt;表格，设置下行数和列数即可，省时又省力。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>基本的markdown语法就是这些了，也够用了。想要学习其他高级操作，可以再去网上搜索。实际上，更重要的是动手实践，用的多了自然也就会了。</p><p>参考文档：<br><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程</a></p><br/><br/><br/>博客最早记载时间为2020年04月23日。]]></content>
    
    
    <summary type="html">Markdown</summary>
    
    
    
    <category term="Markdown" scheme="https://born2do.github.io/categories/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://born2do.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Windows端口被占用</title>
    <link href="https://born2do.github.io/2021/03/08/Windows%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/"/>
    <id>https://born2do.github.io/2021/03/08/Windows%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/</id>
    <published>2021-03-08T13:26:20.000Z</published>
    <updated>2021-03-08T13:27:42.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>启动JavaWeb项目，eclipse提示8080端口已被占用。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="1-查看端口占用情况"><a href="#1-查看端口占用情况" class="headerlink" title="1.查看端口占用情况"></a>1.查看端口占用情况</h2><p>进入Windows命令行，输入“netstat -ano | findstr 8080”，查看8080端口是被哪个服务占用了。<br>显示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TCP    0.0.0.0:8080           0.0.0.0:0              LISTENING       19288</span><br><span class="line">TCP    [::]:8080              [::]:0                 LISTENING       19288</span><br></pre></td></tr></table></figure><h2 id="2-终止服务进程"><a href="#2-终止服务进程" class="headerlink" title="2.终止服务进程"></a>2.终止服务进程</h2><p>输入命令“taskkill -pid 19288 -f”，19288服务终止，8080端口被释放。<br><br/><br><br/><br><br/><br>博客最早记载时间为2020年04月20日。</p>]]></content>
    
    
    <summary type="html">Windows端口被占用</summary>
    
    
    
    <category term="Windows" scheme="https://born2do.github.io/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://born2do.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL解压版安装</title>
    <link href="https://born2do.github.io/2021/03/07/MYSQL%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85/"/>
    <id>https://born2do.github.io/2021/03/07/MYSQL%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85/</id>
    <published>2021-03-07T01:50:34.000Z</published>
    <updated>2021-03-07T01:57:00.587Z</updated>
    
    <content type="html"><![CDATA[<p>根据自己的系统，从官网下载Mysql压缩包。将下载到的文件解压缩到自己喜欢的位置，例如我自己的位置是D:\mysql-8.0.11-winx64。</p><h1 id="配置环境变量。"><a href="#配置环境变量。" class="headerlink" title="配置环境变量。"></a>配置环境变量。</h1><p>将Mysql的bin目录配置到path下面。<br><img src="https://i.loli.net/2021/03/06/XUBsK3YGDMhJb4q.png" alt="MYSQL解压版安装-配置环境变量.png"></p><h1 id="配置my-ini文件。"><a href="#配置my-ini文件。" class="headerlink" title="配置my.ini文件。"></a>配置my.ini文件。</h1><p>在D:\mysql-8.0.11-winx64（注意这个目录要是你自己的mysql目录）目录下新建一个配置文件，文件名叫my.ini，然后把下面的配置代码复制到在my.ini（代码中的路径要改成自己的文件存放路径）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8 </span><br><span class="line">[mysqld]</span><br><span class="line">#设置3306端口</span><br><span class="line">port &#x3D; 3306 </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\mysql-8.0.11-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:\mysql-8.0.11-winx64\data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br></pre></td></tr></table></figure><h1 id="安装mysql服务。"><a href="#安装mysql服务。" class="headerlink" title="安装mysql服务。"></a>安装mysql服务。</h1><p>将目录切换到你解压文件的D:\mysql\mysql-5.6.33-winx64\bin目录，<br>初始化和启动Mysql服务：</p><ul><li>以管理员权限运行cmd</li><li>进入mysql的bin下</li><li>初始化，生成data文件夹<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld  --initialize-insecure （建议使用，不设置root密码）</span><br><span class="line">mysqld  --initialize （不建议使用，生成一个随机的root密码）</span><br></pre></td></tr></table></figure></li><li>安装MySql服务<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -install</span><br></pre></td></tr></table></figure></li></ul><h1 id="开始mysql服务。"><a href="#开始mysql服务。" class="headerlink" title="开始mysql服务。"></a>开始mysql服务。</h1><p>启动mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><h1 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h1><p>安装成功并开始mysql服务后，重新进入DOS命令行，输入<code>mysql -u root -p</code>之后回车。<br>登录mysql之后，设置root密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password for root@localhost &#x3D; password(&#39;YourPassword&#39;);</span><br></pre></td></tr></table></figure><p>或者使用mysqlamdin修改root密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p password NewPassword；</span><br></pre></td></tr></table></figure><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">MYSQL解压版安装</summary>
    
    
    
    <category term="软件安装" scheme="https://born2do.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="MYSQL" scheme="https://born2do.github.io/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>VC++6.0出现Error spawning cl.exe</title>
    <link href="https://born2do.github.io/2021/03/07/VC-6-0%E5%87%BA%E7%8E%B0Error-spawning-cl-exe/"/>
    <id>https://born2do.github.io/2021/03/07/VC-6-0%E5%87%BA%E7%8E%B0Error-spawning-cl-exe/</id>
    <published>2021-03-07T01:49:11.000Z</published>
    <updated>2021-03-07T01:50:13.891Z</updated>
    
    <content type="html"><![CDATA[<p>当我们在VC++6.0中编写好一个C语言程序后，点击“Compile（编译）”或者“Build（构建）”出现的“Compiling… ,Error spawning cl.exe”错误提示，一般都是因为路径设置的问题引起的。</p><ul><li>首先查看VC++6.0的安装路径，一般默认安装都是安装在C:\Program Files\Microsoft Visual Studio目录下，但是你安装时有可能安装在其他目录中，一定要知道安装目录的路径。<br><img src="https://i.loli.net/2021/03/06/mCLRn5FDKjbZGSs.png" alt="VC++6.0安装路径.png"></li><li>打开VC++6.0程序，点击菜单栏上的“工具（T）”，在出现的下拉列表中选择“选项（O）…”，如下图所示。<br><img src="https://i.loli.net/2021/03/06/npCKMIB1q3cm7Z6.png" alt="VC++6.0选项.png"></li><li>弹出一个“选项”窗口，点击窗口菜单栏上的“目录”选项，点击目录（S）对应的下拉框会看到有可执行文件（executatble files）、include files、library files、source files四个选项。<br><img src="https://i.loli.net/2021/03/06/WOi91L6XNxcQAaC.png" alt="VC++6.0选项-目录.png"><br>在“目录（S）”对应的下拉框中选择“include files”，在”路径(D)”中可以看到一共有三行路径，红线框中代表VC++6.0的安装路径，如果不是请改为安装路径。<br>之后，对“可执行文件（executatble files）、library files、source files”做同样的修改。</li><li>改完之后，点击“确定”按钮，重新编译程序，可以发现没有出现“Compiling…,Error spawning cl.exe”这个问题了，程序可以正常编译了。</li></ul><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">VC++6.0出现Error spawning cl.exe</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="VC++6.0" scheme="https://born2do.github.io/tags/VC-6-0/"/>
    
  </entry>
  
  <entry>
    <title>PowerPoint 2013打不开PPT文件</title>
    <link href="https://born2do.github.io/2021/03/06/PowerPoint-2013%E6%89%93%E4%B8%8D%E5%BC%80PPT%E6%96%87%E4%BB%B6/"/>
    <id>https://born2do.github.io/2021/03/06/PowerPoint-2013%E6%89%93%E4%B8%8D%E5%BC%80PPT%E6%96%87%E4%BB%B6/</id>
    <published>2021-03-06T13:23:55.000Z</published>
    <updated>2021-03-06T13:24:28.920Z</updated>
    
    <content type="html"><![CDATA[<p>从网上下载的PPT文件，其本身没有问题，但就是打不开。尝试过office程序的修复，但没用。<br>文件打开的时候会问你 是否信任其来源，点击修复。但是总是修复失败，无法读取。<br>网上的解决办法挺多，最简单的是：右键文件属性，点击解除锁定即可。但是这种方法，治标不治本。<br>以下是彻底解决这个问题的方法：<br>1、使用 PowerPoint 2013 打开PPT文件时会出现如图报错：<br><img src="https://i.loli.net/2021/03/06/824GVSKvepIaM65.png" alt="PowerPoint2013 报错.png"><br>2、点击“取消”<br><img src="https://i.loli.net/2021/03/06/RigbuzvhHXacsEF.png" alt="PowerPoint2013 取消.png"><br>3、点击左上角的“文件”按钮，进入OFFICE 设置<br><img src="https://i.loli.net/2021/03/06/285sY34VxralMwZ.png" alt="PowerPoint2013 设置.png"><br>4、在打开的界面，点击“选项”按钮<br><img src="https://i.loli.net/2021/03/06/rGh3tQWZepJx1UO.png" alt="PowerPoint2013 选项.png"><br>5、进入弹出的“选项”窗口，依次选择“信任中心”-&gt;“信任中心设置”进入下一个界面<br><img src="https://i.loli.net/2021/03/06/XzIU3MCAHDmoROy.png" alt="PowerPoint2013 信任中心.png"><br>6、选择“受保护视图”，将右边窗口三个选项全部取消 “√”选，点击“确定”<br><img src="https://i.loli.net/2021/03/06/u374Z9tKS1dVWeg.png" alt="PowerPoint2013 受保护视图.png"><br>7、这时，再打开PPT， 就不会报该错误提示了。</p><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">PowerPoint 2013打不开PPT文件</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="PowerPoint 2013" scheme="https://born2do.github.io/tags/PowerPoint-2013/"/>
    
  </entry>
  
  <entry>
    <title>navicat连接MySQL出现2059错误</title>
    <link href="https://born2do.github.io/2021/03/06/navicat%E8%BF%9E%E6%8E%A5MySQL%E5%87%BA%E7%8E%B02059%E9%94%99%E8%AF%AF/"/>
    <id>https://born2do.github.io/2021/03/06/navicat%E8%BF%9E%E6%8E%A5MySQL%E5%87%BA%E7%8E%B02059%E9%94%99%E8%AF%AF/</id>
    <published>2021-03-06T13:21:44.000Z</published>
    <updated>2021-03-06T13:23:36.523Z</updated>
    
    <content type="html"><![CDATA[<p>使用navicat连接MySQL时出现2059错误。原因为高版本的MySQL更改了密码验证机制，再次更改回去即可。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-fa5a26df743b8539.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MySQL更新说明.png"></p><h1 id="进入CMD命令符窗口（win-R）"><a href="#进入CMD命令符窗口（win-R）" class="headerlink" title="进入CMD命令符窗口（win+R）"></a>进入CMD命令符窗口（win+R）</h1><p><img src="https://upload-images.jianshu.io/upload_images/20609583-5a4b5d1bc9368468.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入DOS命令窗口.png"></p><h1 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h1><p>进入mysql安装目录的bin路径下运行<code>mysql -u root -p</code>命令进行登录（密码是安装mysql时设置的密码）<br><img src="https://upload-images.jianshu.io/upload_images/20609583-08131b35a8aa55d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录MySQL.png"></p><h1 id="更改密码验证机制"><a href="#更改密码验证机制" class="headerlink" title="更改密码验证机制"></a>更改密码验证机制</h1><p>输入以下命令进行更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;</span><br></pre></td></tr></table></figure><p>root是用户名，localhost是ip地址127.0.0.1都是特指本机，mysql_native_password是旧的密码验证机制，root是密码，最后别忘了分号。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-3fd39f69f3afa195.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MySQL更改验证机制.png"></p><h1 id="进入Navicat测试连接"><a href="#进入Navicat测试连接" class="headerlink" title="进入Navicat测试连接"></a>进入Navicat测试连接</h1><p><img src="https://upload-images.jianshu.io/upload_images/20609583-8cb8751526dc720d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Navicat测试连接.png"></p><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">navicat连接MySQL出现2059错误</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="Navicat" scheme="https://born2do.github.io/tags/Navicat/"/>
    
    <category term="MySQL" scheme="https://born2do.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Windows使用小tips</title>
    <link href="https://born2do.github.io/2021/03/05/Windows%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/"/>
    <id>https://born2do.github.io/2021/03/05/Windows%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/</id>
    <published>2021-03-05T07:10:00.000Z</published>
    <updated>2021-03-06T10:21:41.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="widows输入法，输入后字体变为繁体"><a href="#widows输入法，输入后字体变为繁体" class="headerlink" title="widows输入法，输入后字体变为繁体"></a>widows输入法，输入后字体变为繁体</h1><p>解决：</p><p>打开记事本，光标停在文档内，使用ctrl+shift+f，即可在简体与繁体之间切换。</p><h1 id="word2013无法打开pdf文件，提示无法启动转换器pdf文件"><a href="#word2013无法打开pdf文件，提示无法启动转换器pdf文件" class="headerlink" title="word2013无法打开pdf文件，提示无法启动转换器pdf文件"></a>word2013无法打开pdf文件，提示无法启动转换器pdf文件</h1><p>解决：</p><p>方法一：(最实用)<br>  右键单击word2013，选择属性。在兼容性里勾选以管理员身份运行此程序。再次打开pdf格式文件，出现提示，点击确定即可。</p><p>方法二：<br>  打开系统盘C盘，依次找到路径\Program Files\Common Files\Microsoft Shared\TextConv，找到“TextConv”这个文件夹，然后将其删除。</p><p>方法三：<br>  在桌面左下方的“开始”“运行”中输入“regedit”，进入注册表编辑器，然后依次找到 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Shared Tools\Text Converters\Import\MSWord6.wpc，这个路径，将“MSWord6.wpc”删除即可。</p>]]></content>
    
    
    <summary type="html">Windows使用小tips</summary>
    
    
    
    <category term="Windows" scheme="https://born2do.github.io/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://born2do.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>pure开启文章目录</title>
    <link href="https://born2do.github.io/2021/03/04/pure%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/"/>
    <id>https://born2do.github.io/2021/03/04/pure%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/</id>
    <published>2021-03-04T08:15:00.000Z</published>
    <updated>2021-03-04T16:15:17.111Z</updated>
    
    <content type="html"><![CDATA[<p>我的Hexo博客使用的主题名为“pure”，在最开始搭建时，就将主题配置文件的关于文章目录的toc开启了，但是发现并没有效果。<br>后搜索发现需要这样做：</p><ul><li>主题配置文件blog/themes/pure/_config.yml里面config → toc: true开启目录</li><li>每一篇文章blog/source/_posts/xxx.md的头部都加上toc: true</li><li>文章模板blog/scaffolds/post.md的头部也加上toc: true</li></ul><p>这样子，新老文章的目录都已经开启了。</p>]]></content>
    
    
    <summary type="html">pure开启文章目录</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
