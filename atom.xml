<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenHY的个人博客</title>
  
  
  <link href="https://born2do.github.io/atom.xml" rel="self"/>
  
  <link href="https://born2do.github.io/"/>
  <updated>2021-03-10T12:44:12.919Z</updated>
  <id>https://born2do.github.io/</id>
  
  <author>
    <name>chenhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Linux】crontab定时任务</title>
    <link href="https://born2do.github.io/2021/03/10/%E3%80%90Linux%E3%80%91crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://born2do.github.io/2021/03/10/%E3%80%90Linux%E3%80%91crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</id>
    <published>2021-03-10T12:43:35.000Z</published>
    <updated>2021-03-10T12:44:12.919Z</updated>
    
    <content type="html"><![CDATA[<p>Linux crontab是用来定期执行程序的命令。 </p><ul><li>查看定时任务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure></li><li>编辑定时任务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></li><li>删除定时任务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -d</span><br></pre></td></tr></table></figure>说明：以上几个命令均没有添加用户角色信息，默认为编辑当前用户的crontab定时任务。</li></ul><p>crontab内容格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f1 f2 f3 f4 f5 program</span><br></pre></td></tr></table></figure><p>其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。</p><ul><li>当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，其余类推</li><li>当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其余类推</li><li>当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，其余类推</li><li>当 f1 为 a, b, c,… 时表示第 a, b, c,… 分钟要执行，f2 为 a, b, c,… 时表示第 a, b, c…个小时要执行，其余类推<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*    *    *    *    *</span><br><span class="line">-    -    -    -    -</span><br><span class="line">|    |    |    |    |</span><br><span class="line">|    |    |    |    +----- 星期中星期几 (0 - 6) (星期天 为0)</span><br><span class="line">|    |    |    +---------- 月份 (1 - 12) </span><br><span class="line">|    |    +--------------- 一个月中的第几天 (1 - 31)</span><br><span class="line">|    +-------------------- 小时 (0 - 23)</span><br><span class="line">+------------------------- 分钟 (0 - 59)</span><br></pre></td></tr></table></figure></li></ul><p>eg：</p><ul><li>每一分钟执行一次 /bin/ls<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * &#x2F;bin&#x2F;ls</span><br></pre></td></tr></table></figure></li><li>在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 /usr/bin/backup<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 6-12&#x2F;3 * 12 * &#x2F;usr&#x2F;bin&#x2F;backup</span><br></pre></td></tr></table></figure></li><li>每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分….执行 echo “haha”<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20 0-23&#x2F;2 * * * echo &quot;haha&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">【Linux】crontab定时任务</summary>
    
    
    
    <category term="Linux" scheme="https://born2do.github.io/categories/Linux/"/>
    
    
    <category term="crontab" scheme="https://born2do.github.io/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title>【Excel】使用小tips</title>
    <link href="https://born2do.github.io/2021/03/10/%E3%80%90Excel%E3%80%91%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/"/>
    <id>https://born2do.github.io/2021/03/10/%E3%80%90Excel%E3%80%91%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/</id>
    <published>2021-03-10T12:42:32.000Z</published>
    <updated>2021-03-10T12:43:16.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速填充"><a href="#快速填充" class="headerlink" title="快速填充"></a>快速填充</h1><ul><li>在第一个单元格写好公式</li><li>选中第一个单元格到本列的最后一行</li><li>将光标移动到公式栏，然后按下组合键ctrl+enter</li><li>全部填充完毕</li></ul><h1 id="列查找VLOOKUP函数"><a href="#列查找VLOOKUP函数" class="headerlink" title="列查找VLOOKUP函数"></a>列查找VLOOKUP函数</h1><p>VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])<br>VLOOKUP(查找值，查找范围，查找列数，精确匹配或者近似匹配）</p>]]></content>
    
    
    <summary type="html">【Excel】使用小tips</summary>
    
    
    
    <category term="Excel" scheme="https://born2do.github.io/categories/Excel/"/>
    
    
    <category term="Excel" scheme="https://born2do.github.io/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】使用find命令清理指定时间之前的文件</title>
    <link href="https://born2do.github.io/2021/03/09/%E3%80%90Linux%E3%80%91%E4%BD%BF%E7%94%A8find%E5%91%BD%E4%BB%A4%E6%B8%85%E7%90%86%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E4%B9%8B%E5%89%8D%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://born2do.github.io/2021/03/09/%E3%80%90Linux%E3%80%91%E4%BD%BF%E7%94%A8find%E5%91%BD%E4%BB%A4%E6%B8%85%E7%90%86%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E4%B9%8B%E5%89%8D%E7%9A%84%E6%96%87%E4%BB%B6/</id>
    <published>2021-03-09T12:39:45.000Z</published>
    <updated>2021-03-09T12:40:26.057Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/logs -<span class="built_in">type</span> f -name <span class="string">&quot;*&quot;</span> -mtime +7 -<span class="built_in">exec</span> rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>说明：<br>find 后面紧跟的<code>/root/logs</code>是要查找的目录，.  表示当前目录<br><code>-type f</code>：指定查找对象为文件<br><code>-name &quot;*&quot;</code>：指定查找对象名称为任意<br><code>-mtime +7</code>：查找7天以前的老文件<br><code>-exec rm -f &#123;&#125; \;</code>：执行删除命令，后面有个 <code>&#123;&#125; \;</code> 是必须的</p><ul><li>扩展<br>如果想要定期执行该命令，可以将该命令放到脚本中，然后再使用crontab定时任务进行执行操作。</li></ul>]]></content>
    
    
    <summary type="html">【Linux】使用find命令清理指定时间之前的文件</summary>
    
    
    
    <category term="shell" scheme="https://born2do.github.io/categories/shell/"/>
    
    
    <category term="find" scheme="https://born2do.github.io/tags/find/"/>
    
  </entry>
  
  <entry>
    <title>开源/免费工具</title>
    <link href="https://born2do.github.io/2021/03/09/%E5%BC%80%E6%BA%90-%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7/"/>
    <id>https://born2do.github.io/2021/03/09/%E5%BC%80%E6%BA%90-%E5%85%8D%E8%B4%B9%E5%B7%A5%E5%85%B7/</id>
    <published>2021-03-09T12:38:24.000Z</published>
    <updated>2021-03-09T12:39:22.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h1><ul><li>PuTTY<br>官网： <a href="https://www.putty.org/">https://www.putty.org/</a> </li><li>MTPUTTY （未找到相关licence，但官网表示一切免费）<br>官网： <a href="https://ttyplus.com/">https://ttyplus.com/</a> </li><li>FinalShell（并非开源，仅通用版免费使用）<br>官网： <a href="http://www.hostbuf.com/">http://www.hostbuf.com/</a> </li></ul><h1 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h1><ul><li>WinSCP<br>官网： <a href="https://winscp.net/">https://winscp.net/</a> </li></ul><h1 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h1><ul><li>Notepad++<br>官网： <a href="https://notepad-plus-plus.org/">https://notepad-plus-plus.org/</a></li><li>Typora （并非开源，但免费）<br>官网： <a href="https://www.typora.io/">https://www.typora.io/</a></li></ul><h1 id="集成开发环境IDE"><a href="#集成开发环境IDE" class="headerlink" title="集成开发环境IDE"></a>集成开发环境IDE</h1><ul><li>Eclipse<br>官网： <a href="https://www.eclipse.org/">https://www.eclipse.org/</a> </li></ul><h1 id="数据库连接工具"><a href="#数据库连接工具" class="headerlink" title="数据库连接工具"></a>数据库连接工具</h1><ul><li>DBeaver（社区版免费）<br>官网： <a href="https://dbeaver.io/">https://dbeaver.io/</a></li></ul><h1 id="数据库模型建模工具"><a href="#数据库模型建模工具" class="headerlink" title="数据库模型建模工具"></a>数据库模型建模工具</h1><ul><li>PDMan<br>官网： <a href="http://www.pdman.cn/">http://www.pdman.cn/</a> </li></ul><h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><ul><li>火狐<br>官网： <a href="http://www.firefox.com.cn/">http://www.firefox.com.cn/</a> </li></ul><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><ul><li>MySQL<br>官网： <a href="https://www.mysql.com/">https://www.mysql.com/</a> </li></ul><h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><ul><li>Apache Tomcat<br>官网： <a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></li></ul><h1 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h1><ul><li>PicGo<br>官网： <a href="https://picgo.github.io/PicGo-Doc/">https://picgo.github.io/PicGo-Doc/</a></li></ul><h1 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="版本控制系统"></a>版本控制系统</h1><ul><li>Git<br>官网： <a href="https://git-scm.com/">https://git-scm.com/</a> </li><li>TortoiseSVN<br>官网： <a href="https://tortoisesvn.net/">https://tortoisesvn.net/</a> </li></ul>]]></content>
    
    
    <summary type="html">开源/免费工具</summary>
    
    
    
    <category term="工具" scheme="https://born2do.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="开源" scheme="https://born2do.github.io/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="https://born2do.github.io/2021/03/08/Markdown/"/>
    <id>https://born2do.github.io/2021/03/08/Markdown/</id>
    <published>2021-03-08T13:28:06.000Z</published>
    <updated>2021-03-08T13:28:39.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>目前，主流的markdown编辑器有Typora、MarkdownPad（需要安装插件）、Atom等，但我比较中意Typora，无需安装任何插件，即装即用，轻量级软件，用起来得心应手。</p><p>Typora官网：<a href="https://www.typora.io/">https://www.typora.io/</a></p><p>百度网盘：</p><p>链接：<a href="https://pan.baidu.com/s/1KrC2BoSP2_MBseaQ4Q0BZA">https://pan.baidu.com/s/1KrC2BoSP2_MBseaQ4Q0BZA</a><br>提取码：3vyw</p><p>以下介绍，请复制内容到typora或其他编辑器查看效果。</p><p>对于部分样式，存在多种书写形式，建议只记一种，保持行文规范。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个 <strong>#</strong> 号，二级标题对应两个 <strong>#</strong> 号，以此类推。注意：<code>#</code>号与标题内容之间要保留一个空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">#### 四级标题</span><br><span class="line"></span><br><span class="line">##### 五级标题</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br><span class="line">####### 别想了，没有七级标题</span><br></pre></td></tr></table></figure><h2 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>Typora中直接回车即可换行。其他编译器，两个或两个以上空格加回车，即可换行。</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <code>~~</code> 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~www.aliyun.com~</span><br></pre></td></tr></table></figure><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>通过HTML的<code>&lt;u&gt;</code>标签来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[^要注明的文本]</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用星号(*<strong>**)、加号(</strong>+<strong>)或是减号(</strong>-**)作为列表标记。注意，符号与文字间要空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line"></span><br><span class="line">+ 第一项</span><br><span class="line">+ 第二项</span><br><span class="line">+ 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br></pre></td></tr></table></figure><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>使用数字并加上<code>.</code>号来表示。注意，符号与文字间要空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>只需在子列表中的选项添加四个空格即可。（使用tab键也可，会有不同效果）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">2. 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><h3 id="区块-1"><a href="#区块-1" class="headerlink" title="区块"></a>区块</h3><p>区块引用在段落开头使用 <code>&gt;</code> 符号 ，然后后面紧跟一个空格符号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是区块，不信你试试</span><br></pre></td></tr></table></figure><h3 id="区块嵌套"><a href="#区块嵌套" class="headerlink" title="区块嵌套"></a>区块嵌套</h3><p>区块可以嵌套，增加<code>&gt;</code>即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure><h3 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块中使用列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br><span class="line">&gt; + 第三项</span><br></pre></td></tr></table></figure><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">    &gt; 区块一</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h3><p>少量片段，使用一对反单引号（``）即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;System.out.println();&#96;</span><br></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>用一对 （```） 包裹一段代码，并指定一种语言（也可以不指定）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>这就是代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接使用方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>Markdown 图片语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line"></span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><p>Typora中，快捷键<code>ctrl</code>+<code>shift</code>+<code>i</code>，即可快速插入图片。</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><p>对齐方式：</p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>举例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>表格是markdown的一大痛点，简单的合并单元格都不行（实际上借助其他插件是可以的，就是太麻烦）。个人建议，需要用到表格的时候，直接右键-&gt;插入-&gt;表格，设置下行数和列数即可，省时又省力。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>基本的markdown语法就是这些了，也够用了。想要学习其他高级操作，可以再去网上搜索。实际上，更重要的是动手实践，用的多了自然也就会了。</p><p>参考文档：<br><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程</a></p><br/><br/><br/>博客最早记载时间为2020年04月23日。]]></content>
    
    
    <summary type="html">Markdown</summary>
    
    
    
    <category term="Markdown" scheme="https://born2do.github.io/categories/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://born2do.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Windows端口被占用</title>
    <link href="https://born2do.github.io/2021/03/08/Windows%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/"/>
    <id>https://born2do.github.io/2021/03/08/Windows%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/</id>
    <published>2021-03-08T13:26:20.000Z</published>
    <updated>2021-03-08T13:27:42.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>启动JavaWeb项目，eclipse提示8080端口已被占用。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="1-查看端口占用情况"><a href="#1-查看端口占用情况" class="headerlink" title="1.查看端口占用情况"></a>1.查看端口占用情况</h2><p>进入Windows命令行，输入“netstat -ano | findstr 8080”，查看8080端口是被哪个服务占用了。<br>显示如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TCP    0.0.0.0:8080           0.0.0.0:0              LISTENING       19288</span><br><span class="line">TCP    [::]:8080              [::]:0                 LISTENING       19288</span><br></pre></td></tr></table></figure><h2 id="2-终止服务进程"><a href="#2-终止服务进程" class="headerlink" title="2.终止服务进程"></a>2.终止服务进程</h2><p>输入命令“taskkill -pid 19288 -f”，19288服务终止，8080端口被释放。<br><br/><br><br/><br><br/><br>博客最早记载时间为2020年04月20日。</p>]]></content>
    
    
    <summary type="html">Windows端口被占用</summary>
    
    
    
    <category term="Windows" scheme="https://born2do.github.io/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://born2do.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL解压版安装</title>
    <link href="https://born2do.github.io/2021/03/07/MYSQL%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85/"/>
    <id>https://born2do.github.io/2021/03/07/MYSQL%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85/</id>
    <published>2021-03-07T01:50:34.000Z</published>
    <updated>2021-03-07T01:57:00.587Z</updated>
    
    <content type="html"><![CDATA[<p>根据自己的系统，从官网下载Mysql压缩包。将下载到的文件解压缩到自己喜欢的位置，例如我自己的位置是D:\mysql-8.0.11-winx64。</p><h1 id="配置环境变量。"><a href="#配置环境变量。" class="headerlink" title="配置环境变量。"></a>配置环境变量。</h1><p>将Mysql的bin目录配置到path下面。<br><img src="https://i.loli.net/2021/03/06/XUBsK3YGDMhJb4q.png" alt="MYSQL解压版安装-配置环境变量.png"></p><h1 id="配置my-ini文件。"><a href="#配置my-ini文件。" class="headerlink" title="配置my.ini文件。"></a>配置my.ini文件。</h1><p>在D:\mysql-8.0.11-winx64（注意这个目录要是你自己的mysql目录）目录下新建一个配置文件，文件名叫my.ini，然后把下面的配置代码复制到在my.ini（代码中的路径要改成自己的文件存放路径）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8 </span><br><span class="line">[mysqld]</span><br><span class="line">#设置3306端口</span><br><span class="line">port &#x3D; 3306 </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\mysql-8.0.11-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:\mysql-8.0.11-winx64\data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br></pre></td></tr></table></figure><h1 id="安装mysql服务。"><a href="#安装mysql服务。" class="headerlink" title="安装mysql服务。"></a>安装mysql服务。</h1><p>将目录切换到你解压文件的D:\mysql\mysql-5.6.33-winx64\bin目录，<br>初始化和启动Mysql服务：</p><ul><li>以管理员权限运行cmd</li><li>进入mysql的bin下</li><li>初始化，生成data文件夹<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld  --initialize-insecure （建议使用，不设置root密码）</span><br><span class="line">mysqld  --initialize （不建议使用，生成一个随机的root密码）</span><br></pre></td></tr></table></figure></li><li>安装MySql服务<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -install</span><br></pre></td></tr></table></figure></li></ul><h1 id="开始mysql服务。"><a href="#开始mysql服务。" class="headerlink" title="开始mysql服务。"></a>开始mysql服务。</h1><p>启动mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><h1 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h1><p>安装成功并开始mysql服务后，重新进入DOS命令行，输入<code>mysql -u root -p</code>之后回车。<br>登录mysql之后，设置root密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password for root@localhost &#x3D; password(&#39;YourPassword&#39;);</span><br></pre></td></tr></table></figure><p>或者使用mysqlamdin修改root密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p password NewPassword；</span><br></pre></td></tr></table></figure><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">MYSQL解压版安装</summary>
    
    
    
    <category term="软件安装" scheme="https://born2do.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="MYSQL" scheme="https://born2do.github.io/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>VC++6.0出现Error spawning cl.exe</title>
    <link href="https://born2do.github.io/2021/03/07/VC-6-0%E5%87%BA%E7%8E%B0Error-spawning-cl-exe/"/>
    <id>https://born2do.github.io/2021/03/07/VC-6-0%E5%87%BA%E7%8E%B0Error-spawning-cl-exe/</id>
    <published>2021-03-07T01:49:11.000Z</published>
    <updated>2021-03-07T01:50:13.891Z</updated>
    
    <content type="html"><![CDATA[<p>当我们在VC++6.0中编写好一个C语言程序后，点击“Compile（编译）”或者“Build（构建）”出现的“Compiling… ,Error spawning cl.exe”错误提示，一般都是因为路径设置的问题引起的。</p><ul><li>首先查看VC++6.0的安装路径，一般默认安装都是安装在C:\Program Files\Microsoft Visual Studio目录下，但是你安装时有可能安装在其他目录中，一定要知道安装目录的路径。<br><img src="https://i.loli.net/2021/03/06/mCLRn5FDKjbZGSs.png" alt="VC++6.0安装路径.png"></li><li>打开VC++6.0程序，点击菜单栏上的“工具（T）”，在出现的下拉列表中选择“选项（O）…”，如下图所示。<br><img src="https://i.loli.net/2021/03/06/npCKMIB1q3cm7Z6.png" alt="VC++6.0选项.png"></li><li>弹出一个“选项”窗口，点击窗口菜单栏上的“目录”选项，点击目录（S）对应的下拉框会看到有可执行文件（executatble files）、include files、library files、source files四个选项。<br><img src="https://i.loli.net/2021/03/06/WOi91L6XNxcQAaC.png" alt="VC++6.0选项-目录.png"><br>在“目录（S）”对应的下拉框中选择“include files”，在”路径(D)”中可以看到一共有三行路径，红线框中代表VC++6.0的安装路径，如果不是请改为安装路径。<br>之后，对“可执行文件（executatble files）、library files、source files”做同样的修改。</li><li>改完之后，点击“确定”按钮，重新编译程序，可以发现没有出现“Compiling…,Error spawning cl.exe”这个问题了，程序可以正常编译了。</li></ul><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">VC++6.0出现Error spawning cl.exe</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="VC++6.0" scheme="https://born2do.github.io/tags/VC-6-0/"/>
    
  </entry>
  
  <entry>
    <title>PowerPoint 2013打不开PPT文件</title>
    <link href="https://born2do.github.io/2021/03/06/PowerPoint-2013%E6%89%93%E4%B8%8D%E5%BC%80PPT%E6%96%87%E4%BB%B6/"/>
    <id>https://born2do.github.io/2021/03/06/PowerPoint-2013%E6%89%93%E4%B8%8D%E5%BC%80PPT%E6%96%87%E4%BB%B6/</id>
    <published>2021-03-06T13:23:55.000Z</published>
    <updated>2021-03-06T13:24:28.920Z</updated>
    
    <content type="html"><![CDATA[<p>从网上下载的PPT文件，其本身没有问题，但就是打不开。尝试过office程序的修复，但没用。<br>文件打开的时候会问你 是否信任其来源，点击修复。但是总是修复失败，无法读取。<br>网上的解决办法挺多，最简单的是：右键文件属性，点击解除锁定即可。但是这种方法，治标不治本。<br>以下是彻底解决这个问题的方法：<br>1、使用 PowerPoint 2013 打开PPT文件时会出现如图报错：<br><img src="https://i.loli.net/2021/03/06/824GVSKvepIaM65.png" alt="PowerPoint2013 报错.png"><br>2、点击“取消”<br><img src="https://i.loli.net/2021/03/06/RigbuzvhHXacsEF.png" alt="PowerPoint2013 取消.png"><br>3、点击左上角的“文件”按钮，进入OFFICE 设置<br><img src="https://i.loli.net/2021/03/06/285sY34VxralMwZ.png" alt="PowerPoint2013 设置.png"><br>4、在打开的界面，点击“选项”按钮<br><img src="https://i.loli.net/2021/03/06/rGh3tQWZepJx1UO.png" alt="PowerPoint2013 选项.png"><br>5、进入弹出的“选项”窗口，依次选择“信任中心”-&gt;“信任中心设置”进入下一个界面<br><img src="https://i.loli.net/2021/03/06/XzIU3MCAHDmoROy.png" alt="PowerPoint2013 信任中心.png"><br>6、选择“受保护视图”，将右边窗口三个选项全部取消 “√”选，点击“确定”<br><img src="https://i.loli.net/2021/03/06/u374Z9tKS1dVWeg.png" alt="PowerPoint2013 受保护视图.png"><br>7、这时，再打开PPT， 就不会报该错误提示了。</p><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">PowerPoint 2013打不开PPT文件</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="PowerPoint 2013" scheme="https://born2do.github.io/tags/PowerPoint-2013/"/>
    
  </entry>
  
  <entry>
    <title>navicat连接MySQL出现2059错误</title>
    <link href="https://born2do.github.io/2021/03/06/navicat%E8%BF%9E%E6%8E%A5MySQL%E5%87%BA%E7%8E%B02059%E9%94%99%E8%AF%AF/"/>
    <id>https://born2do.github.io/2021/03/06/navicat%E8%BF%9E%E6%8E%A5MySQL%E5%87%BA%E7%8E%B02059%E9%94%99%E8%AF%AF/</id>
    <published>2021-03-06T13:21:44.000Z</published>
    <updated>2021-03-06T13:23:36.523Z</updated>
    
    <content type="html"><![CDATA[<p>使用navicat连接MySQL时出现2059错误。原因为高版本的MySQL更改了密码验证机制，再次更改回去即可。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-fa5a26df743b8539.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MySQL更新说明.png"></p><h1 id="进入CMD命令符窗口（win-R）"><a href="#进入CMD命令符窗口（win-R）" class="headerlink" title="进入CMD命令符窗口（win+R）"></a>进入CMD命令符窗口（win+R）</h1><p><img src="https://upload-images.jianshu.io/upload_images/20609583-5a4b5d1bc9368468.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入DOS命令窗口.png"></p><h1 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h1><p>进入mysql安装目录的bin路径下运行<code>mysql -u root -p</code>命令进行登录（密码是安装mysql时设置的密码）<br><img src="https://upload-images.jianshu.io/upload_images/20609583-08131b35a8aa55d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录MySQL.png"></p><h1 id="更改密码验证机制"><a href="#更改密码验证机制" class="headerlink" title="更改密码验证机制"></a>更改密码验证机制</h1><p>输入以下命令进行更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;</span><br></pre></td></tr></table></figure><p>root是用户名，localhost是ip地址127.0.0.1都是特指本机，mysql_native_password是旧的密码验证机制，root是密码，最后别忘了分号。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-3fd39f69f3afa195.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MySQL更改验证机制.png"></p><h1 id="进入Navicat测试连接"><a href="#进入Navicat测试连接" class="headerlink" title="进入Navicat测试连接"></a>进入Navicat测试连接</h1><p><img src="https://upload-images.jianshu.io/upload_images/20609583-8cb8751526dc720d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Navicat测试连接.png"></p><p>博客最早记载时间为2019年08月30日。</p>]]></content>
    
    
    <summary type="html">navicat连接MySQL出现2059错误</summary>
    
    
    
    <category term="error" scheme="https://born2do.github.io/categories/error/"/>
    
    
    <category term="Navicat" scheme="https://born2do.github.io/tags/Navicat/"/>
    
    <category term="MySQL" scheme="https://born2do.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Windows使用小tips</title>
    <link href="https://born2do.github.io/2021/03/05/Windows%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/"/>
    <id>https://born2do.github.io/2021/03/05/Windows%E4%BD%BF%E7%94%A8%E5%B0%8Ftips/</id>
    <published>2021-03-05T07:10:00.000Z</published>
    <updated>2021-03-06T10:21:41.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="widows输入法，输入后字体变为繁体"><a href="#widows输入法，输入后字体变为繁体" class="headerlink" title="widows输入法，输入后字体变为繁体"></a>widows输入法，输入后字体变为繁体</h1><p>解决：</p><p>打开记事本，光标停在文档内，使用ctrl+shift+f，即可在简体与繁体之间切换。</p><h1 id="word2013无法打开pdf文件，提示无法启动转换器pdf文件"><a href="#word2013无法打开pdf文件，提示无法启动转换器pdf文件" class="headerlink" title="word2013无法打开pdf文件，提示无法启动转换器pdf文件"></a>word2013无法打开pdf文件，提示无法启动转换器pdf文件</h1><p>解决：</p><p>方法一：(最实用)<br>  右键单击word2013，选择属性。在兼容性里勾选以管理员身份运行此程序。再次打开pdf格式文件，出现提示，点击确定即可。</p><p>方法二：<br>  打开系统盘C盘，依次找到路径\Program Files\Common Files\Microsoft Shared\TextConv，找到“TextConv”这个文件夹，然后将其删除。</p><p>方法三：<br>  在桌面左下方的“开始”“运行”中输入“regedit”，进入注册表编辑器，然后依次找到 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Shared Tools\Text Converters\Import\MSWord6.wpc，这个路径，将“MSWord6.wpc”删除即可。</p>]]></content>
    
    
    <summary type="html">Windows使用小tips</summary>
    
    
    
    <category term="Windows" scheme="https://born2do.github.io/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://born2do.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>pure开启文章目录</title>
    <link href="https://born2do.github.io/2021/03/04/pure%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/"/>
    <id>https://born2do.github.io/2021/03/04/pure%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/</id>
    <published>2021-03-04T08:15:00.000Z</published>
    <updated>2021-03-04T16:15:17.111Z</updated>
    
    <content type="html"><![CDATA[<p>我的Hexo博客使用的主题名为“pure”，在最开始搭建时，就将主题配置文件的关于文章目录的toc开启了，但是发现并没有效果。<br>后搜索发现需要这样做：</p><ul><li>主题配置文件blog/themes/pure/_config.yml里面config → toc: true开启目录</li><li>每一篇文章blog/source/_posts/xxx.md的头部都加上toc: true</li><li>文章模板blog/scaffolds/post.md的头部也加上toc: true</li></ul><p>这样子，新老文章的目录都已经开启了。</p>]]></content>
    
    
    <summary type="html">pure开启文章目录</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客网站安装gitalk插件</title>
    <link href="https://born2do.github.io/2021/03/04/Hexo%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%AE%89%E8%A3%85gitalk%E6%8F%92%E4%BB%B6/"/>
    <id>https://born2do.github.io/2021/03/04/Hexo%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%AE%89%E8%A3%85gitalk%E6%8F%92%E4%BB%B6/</id>
    <published>2021-03-04T07:30:00.000Z</published>
    <updated>2021-03-04T16:03:09.451Z</updated>
    
    <content type="html"><![CDATA[<p>博客的评论系统，一开始选择了“来必力”（韩国的），但是发现注册个账号要人命，果断放弃。后在Gitalk和Gitment之间选择了Gitalk。开源免费无广告，不要因为是个白嫖党而不好意思，毕竟正是开源促进了IT业的发展。<br>在此记录下，博客网站安装评论系统的全过程。</p><h1 id="注册-GitHub-OAuth-Apps"><a href="#注册-GitHub-OAuth-Apps" class="headerlink" title="注册 GitHub OAuth Apps"></a>注册 GitHub OAuth Apps</h1><p>GitHub头像-&gt;Settings-&gt;Developer settings-&gt;OAuth Apps，点击“new OAuth apps”进行OAuth application的创建。<br><img src="https://i.loli.net/2021/03/04/DBzsdpUtORAfrHu.png" alt="OAuth Apps.png"><br>注册成功后，复制ClientID以及生成的ClientSecret，待用。</p><h1 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h1><p>新建仓库，用于存储评论。</p><h1 id="Hexo引入Gitalk"><a href="#Hexo引入Gitalk" class="headerlink" title="Hexo引入Gitalk"></a>Hexo引入Gitalk</h1><p>打开主题配置文件，修改评论系统相关配置。<br>我使用的Hexo的主题名为pure，主题配置文件中，注释相当详细，在此不做过多赘述。</p><h1 id="上传GitHub并初始化评论系统"><a href="#上传GitHub并初始化评论系统" class="headerlink" title="上传GitHub并初始化评论系统"></a>上传GitHub并初始化评论系统</h1><p>本地的评论系统完成后，将本地博客系统上传至GitHub仓库。<br>访问下在GitHub上的博客，会发现评论模块会提示初始化提示，使用自己的GitHub账号登陆下就好了。</p><h1 id="Gitalk-403报错"><a href="#Gitalk-403报错" class="headerlink" title="Gitalk 403报错"></a>Gitalk 403报错</h1><p>我的Gitalk一开始就显示403报错，查阅相关资料，是因为“Public demo server (cors-anywhere.herokuapp.com) will be very limited by January 2021, 31st”，网站受限了。解决方式就是点击下方的链接进行暂时权限的获取（初始化后就不用管他了）。<br>解锁链接： <a href="http://cors-anywhere.herokuapp.com/corsdemo">http://cors-anywhere.herokuapp.com/corsdemo</a> 。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.cnblogs.com/qisi007/p/13731562.html">https://www.cnblogs.com/qisi007/p/13731562.html</a></p>]]></content>
    
    
    <summary type="html">Hexo博客网站安装gitalk插件</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
    <category term="Gitalk" scheme="https://born2do.github.io/tags/Gitalk/"/>
    
  </entry>
  
  <entry>
    <title>博客图床设置</title>
    <link href="https://born2do.github.io/2021/03/03/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE/"/>
    <id>https://born2do.github.io/2021/03/03/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-03-03T07:30:00.000Z</published>
    <updated>2021-03-03T15:46:55.254Z</updated>
    
    <content type="html"><![CDATA[<p>以前写博客，基本上都是在本地，博客中的图片也都是使用相对路径。<br>在博客园也写过博客，那时图片是上传到博客园的自定义文件夹中，再去复制图片链接使用。<br>但是，这些使用图片的方式都不太友善，不好管理。<br>这次重新搭建整理博客，我开始使用图床了。</p><h1 id="下载图片管理工具PicGo-（不喜欢也可略过）"><a href="#下载图片管理工具PicGo-（不喜欢也可略过）" class="headerlink" title="下载图片管理工具PicGo （不喜欢也可略过）"></a>下载图片管理工具PicGo （不喜欢也可略过）</h1><p>我使用的图片管理工具为PicGo（ <a href="https://picgo.github.io/PicGo-Doc/">https://picgo.github.io/PicGo-Doc/</a> ）。<br>官方文档（ <a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html">https://picgo.github.io/PicGo-Doc/zh/guide/config.html</a> ）极为详细，先无脑安装一波，然后按照官方文档进行配置就好了。</p><h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><p>图床网站还是比较多的，当然，也可以在GitHub上自行搭建仓库用于存储图片。<br>一开始，我是想用GitHub自行搭建的，但是搭建完成后发现，网络太慢了，基本上加载不出来。<br>然后对比了多家图床网站后，选择了SMMS。速度快，无广告，存储空间还挺大，与PicGo搭配使用配置起来也比较简单。自行注册，生成token，然后配置到PicGo中，配置完成。<br>极力推荐SMMS！！！</p>]]></content>
    
    
    <summary type="html">博客图床设置</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="图床" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%9B%BE%E5%BA%8A/"/>
    
    
    <category term="PicGo" scheme="https://born2do.github.io/tags/PicGo/"/>
    
    <category term="SMMS" scheme="https://born2do.github.io/tags/SMMS/"/>
    
  </entry>
  
  <entry>
    <title>GitHub新建仓库，默认分支由master改为main</title>
    <link href="https://born2do.github.io/2021/03/03/GitHub%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%EF%BC%8C%E9%BB%98%E8%AE%A4%E5%88%86%E6%94%AF%E7%94%B1master%E6%94%B9%E4%B8%BAmain/"/>
    <id>https://born2do.github.io/2021/03/03/GitHub%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%EF%BC%8C%E9%BB%98%E8%AE%A4%E5%88%86%E6%94%AF%E7%94%B1master%E6%94%B9%E4%B8%BAmain/</id>
    <published>2021-03-03T05:30:00.000Z</published>
    <updated>2021-03-03T15:44:18.753Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Hexo搭建好本地博客后，推送至GitHub仓库。<br>由于长时间未使用GitHub了，并不知晓新建仓库的默认分支由master改为main了，在站点配置文件中branch的值写成了master。<br>使用git上传后，在原有仓库新增了一个master分支。<br>发现这个问题后，我直接将GitHub仓库中的master分支删除掉了，并修改本地站点配置文件中的master为main，重新进行了推送。<br>幸好及时发现，做了更正，可谓是及时止损呐。</p><blockquote><p>默认分支更名，可以去GitHub上看看 <a href="https://github.com/github/renaming.git">https://github.com/github/renaming.git</a> 。</p></blockquote>]]></content>
    
    
    <summary type="html">GitHub新建仓库，默认分支由master改为main</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="GitHub" scheme="https://born2do.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>hexo报错TypeError: Cannot read property &#39;count&#39; of undefined</title>
    <link href="https://born2do.github.io/2021/03/03/hexo%E6%8A%A5%E9%94%99TypeError-Cannot-read-property-&#39;count&#39;-of-undefined/"/>
    <id>https://born2do.github.io/2021/03/03/hexo%E6%8A%A5%E9%94%99TypeError-Cannot-read-property-&#39;count&#39;-of-undefined/</id>
    <published>2021-03-03T04:30:00.000Z</published>
    <updated>2021-03-03T15:44:42.224Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h1><p>使用“hexo s”启动本地服务器时，项目报错，具体如下：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">s</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Validating</span> <span class="title">config</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Start</span> <span class="title">processing</span></span></span><br><span class="line"><span class="function"><span class="title">FATAL</span> &#123;</span></span><br><span class="line"><span class="function">  <span class="title">err</span>: <span class="title">TypeError</span>: <span class="title">Cannot</span> <span class="title">read</span> <span class="title">property</span> &#x27;<span class="title">count</span>&#x27; <span class="title">of</span> <span class="title">undefined</span></span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">Hexo.module.exports</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">_hexo</span>-<span class="title">baidu</span>-<span class="title">url</span>-<span class="title">submit</span>@0.0.6@<span class="title">hexo</span>-<span class="title">baidu</span>-<span class="title">url</span>-<span class="title">submit</span>\<span class="title">lib</span>\<span class="title">generator.js</span>:4:41)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">Hexo.tryCatcher</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">util.js</span>:16:23)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">Hexo</span>.&lt;<span class="title">anonymous</span>&gt; (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">method.js</span>:15:34)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">hexo</span>\<span class="title">lib</span>\<span class="title">hexo</span>\<span class="title">index.js</span>:405:22</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">tryCatcher</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">util.js</span>:16:23)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">MappingPromiseArray._promiseFulfilled</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">map.js</span>:68:38)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">MappingPromiseArray.PromiseArray._iterate</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">promise_array.js</span>:115:31)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">MappingPromiseArray.init</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">promise_array.js</span>:79:10)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">MappingPromiseArray._asyncInit</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">map.js</span>:37:10)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">_drainQueueStep</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">async.js</span>:97:12)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">_drainQueue</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">async.js</span>:86:9)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">Async._drainQueues</span> (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">async.js</span>:102:5)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">Immediate.Async.drainQueues</span> [<span class="title">as</span> <span class="title">_onImmediate</span>] (<span class="title">D</span>:\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">bluebird</span>\<span class="title">js</span>\<span class="title">release</span>\<span class="title">async.js</span>:15:14)</span></span><br><span class="line"><span class="function">      <span class="title">at</span> <span class="title">processImmediate</span> (<span class="title">internal</span>/<span class="title">timers.js</span>:461:21)</span></span><br><span class="line"><span class="function">&#125; <span class="title">Something</span>&#x27;<span class="title">s</span> <span class="title">wrong</span>. <span class="title">Maybe</span> <span class="title">you</span> <span class="title">can</span> <span class="title">find</span> <span class="title">the</span> <span class="title">solution</span> <span class="title">here</span>: %<span class="title">s</span> <span class="title">https</span>://<span class="title">hexo.io</span>/<span class="title">docs</span>/<span class="title">troubleshooting.html</span></span></span><br></pre></td></tr></table></figure><p>而在这之前，我安装了hexo-baidu-url-submit插件。</p><h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>从报错日志中我们可以看到是由于hexo-baidu-url-submit插件导致的，查看官方文档（ <a href="https://github.com/huiwang/hexo-baidu-url-submit">https://github.com/huiwang/hexo-baidu-url-submit</a> ）发现是由于没有在站点配置文件配置baidu-url-submit配置项导致。<br>这里介绍两种处理方式：</p><h2 id="1-补全相关配置信息"><a href="#1-补全相关配置信息" class="headerlink" title="1.补全相关配置信息"></a>1.补全相关配置信息</h2><ul><li>注册百度站长（ <a href="https://ziyuan.baidu.com/">https://ziyuan.baidu.com/</a> ）（需要有自己的域名），获取相关token等必要信息。</li><li>将baidu-url-submit配置项添加至站点配置文件中。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置百度主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">200</span>  <span class="comment">#比如200，代表提交最新的200个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">www.baidu.com</span> <span class="comment"># 在百度站长平台中注册的域名，这个改为你自己的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">your_token</span> <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里，这个默认</span></span><br></pre></td></tr></table></figure></li><li>此外，还需要在站点配置文件中加入新的 deploy 配置项：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">【GitHub项目地址】</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-放弃百度主动推送功能，卸载该插件即可。"><a href="#2-放弃百度主动推送功能，卸载该插件即可。" class="headerlink" title="2.放弃百度主动推送功能，卸载该插件即可。"></a>2.放弃百度主动推送功能，卸载该插件即可。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm remove hexo-baidu-url-submit</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>由于没有域名，我选择了后者，放弃了百度主动推送功能。第一种处理方式是从他人博客参考获取，可行性仍有待进一步验证。</p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/nineya_com/article/details/103445898">https://blog.csdn.net/nineya_com/article/details/103445898</a></li><li><a href="https://blog.yirenliu.cn/posts/42821/#%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8E%A8%E9%80%81%E7%9A%84%E4%BD%9C%E7%94%A8">https://blog.yirenliu.cn/posts/42821/#%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8E%A8%E9%80%81%E7%9A%84%E4%BD%9C%E7%94%A8</a></li></ol>]]></content>
    
    
    <summary type="html">hexo报错TypeError: Cannot read property &#39;count&#39; of undefined</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo s 报错</title>
    <link href="https://born2do.github.io/2021/03/02/hexo-s-%E6%8A%A5%E9%94%99/"/>
    <id>https://born2do.github.io/2021/03/02/hexo-s-%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-02T06:30:00.000Z</published>
    <updated>2021-03-02T15:35:39.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h1><p>在执行“hexo s”，启动本地服务器时，控制台报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">FATAL Permission denied. You can&#39;t use port 4000.</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: listen EACCES: permission denied 0.0.0.0:4000</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>查看报错日志，很明显是默认启动端口4000已经被占用。<br>为了不影响现有已运行程序，我们暂时修改启动端口，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5555</span><br></pre></td></tr></table></figure><p>服务器成功启动。</p><p>此时，需通过 <a href="http://localhost:5555/">http://localhost:5555/</a> 来访问本地博客。</p>]]></content>
    
    
    <summary type="html">hexo s 报错</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo init 403超时报错</title>
    <link href="https://born2do.github.io/2021/03/02/hexo-init-403%E8%B6%85%E6%97%B6%E6%8A%A5%E9%94%99/"/>
    <id>https://born2do.github.io/2021/03/02/hexo-init-403%E8%B6%85%E6%97%B6%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-02T06:00:00.000Z</published>
    <updated>2021-03-02T15:32:20.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h1><p>在执行“hexo init blog”，对blog文件夹初始化时，控制台报错如下：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line"><span class="function">fatal: <span class="title">unable</span> <span class="title">to</span> <span class="title">access</span> &#x27;<span class="title">https</span>://<span class="title">github.com</span>/<span class="title">hexojs</span>/<span class="title">hexo</span>-<span class="title">starter.git</span>/&#x27;: <span class="title">Failed</span> <span class="title">to</span> <span class="title">connect</span> <span class="title">to</span> <span class="title">github.com</span> <span class="title">port</span> 443: <span class="title">Timed</span> <span class="title">out</span></span></span><br><span class="line"><span class="function">……</span></span><br></pre></td></tr></table></figure><h1 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h1><p>403网络超时报错，那么恭喜你，被墙了。<br>解决方式如下：</p><h2 id="1-检查是否真正由于无法连接GitHub导致。"><a href="#1-检查是否真正由于无法连接GitHub导致。" class="headerlink" title="1.检查是否真正由于无法连接GitHub导致。"></a>1.检查是否真正由于无法连接GitHub导致。</h2><p>在Windows命令行下，执行如下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> github.com</span><br></pre></td></tr></table></figure><p>如果结果显示100%丢失，那么就是因为无法连接到GitHub导致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">正在 Ping github.com [13.229.188.59] 具有 32 字节的数据:</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line"></span><br><span class="line">13.229.188.59 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 &#x3D; 4，已接收 &#x3D; 0，丢失 &#x3D; 4 (100% 丢失)，</span><br></pre></td></tr></table></figure><p>如果不是，请不要继续往下看了，浪费时间。请另寻他法。</p><h2 id="2-配置本地hosts"><a href="#2-配置本地hosts" class="headerlink" title="2.配置本地hosts"></a>2.配置本地hosts</h2><p>访问站长工具网站（ <a href="http://tool.chinaz.com/dns?type=1&amp;host=github.com&amp;ip=">http://tool.chinaz.com/dns?type=1&amp;host=github.com&amp;ip=</a> ），获取GitHub的相关DNS。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-2957dbe54c55bbe5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GitHub网站DNS获取.png"><br>先在本地ping相应的IP，如果可以连接上并且速度还行，那么可以将相关信息配置到本地hosts文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13.114.40.48 github.com</span><br></pre></td></tr></table></figure><p>hosts文件配置完成后，在命令行执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ipconfig &#x2F;flushdns</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">已成功刷新 DNS 解析缓存。</span><br></pre></td></tr></table></figure><h2 id="3-完美解决"><a href="#3-完美解决" class="headerlink" title="3.完美解决"></a>3.完美解决</h2><p>重新打开命令行窗口，执行“hexo init blog”，你会发现片刻后Hexo初始化便完成了。</p><blockquote><p>获取GitHub的DNS方式不止这一种方式，你也可以访问ipaddress网站（ <a href="https://github.com.ipaddress.com/www.github.com">https://github.com.ipaddress.com/www.github.com</a> ）获取相关IP，更多方式请自行百度。</p></blockquote>]]></content>
    
    
    <summary type="html">hexo init 403超时报错</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建</title>
    <link href="https://born2do.github.io/2021/03/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://born2do.github.io/2021/03/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-02T03:00:00.000Z</published>
    <updated>2021-03-02T15:30:13.664Z</updated>
    
    <content type="html"><![CDATA[<p>采用GitHub+Hexo搭建博客。<br>优点：干净好看，自主性强，没广告。<br>缺点：在建设过程中，很容易遇到墙，随之而来的便是失败了。<br>在此，记录下博客搭建过程。</p><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p>官网（ <a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a> ）下载node.js安装包，无脑安装即可。<br>Windows命令行下，检查是否成功安装：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\&gt;<span class="title">node</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function"><span class="title">v12</span>.19.0</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\&gt;<span class="title">npm</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function">6.14.8</span></span><br></pre></td></tr></table></figure><p>使用npm下载依赖时，由于是从国外的网站上下载内容，所以可能经常会出现不稳定的情况，所以需要下载cnpm代替npm，cnpm是国内淘宝的做的，在国内使用较为稳定。</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.下载cnpm</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="number">2</span>.下载依赖</span><br><span class="line">cnpm i  或者 cnpm install</span><br></pre></td></tr></table></figure><p>在后续的npm操作中，如卡顿或是直接超时报错，建议使用cnpm代替npm。</p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>官网（ <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ）下载Git安装包，在安装过程中如遇到“Use Windows’ default console window”，选择该项即可。剩余步骤无脑安装即可。<br>Windows命令行下，检查是否成功安装：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\&gt;<span class="title">git</span> --<span class="title">version</span></span></span><br><span class="line"><span class="function"><span class="title">git</span> <span class="title">version</span> 2.22.0.<span class="title">windows</span>.1</span></span><br></pre></td></tr></table></figure><h1 id="配置GitHubSSH"><a href="#配置GitHubSSH" class="headerlink" title="配置GitHubSSH"></a>配置GitHubSSH</h1><h2 id="1-在本地生成SSH-key"><a href="#1-在本地生成SSH-key" class="headerlink" title="1.在本地生成SSH key"></a>1.在本地生成SSH key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>一般默认在 <code>C:\Users\【你的用户名】\.ssh\</code> 目录下生成相应的id_rsa.pub文件。</p><h2 id="2-GitHub添加SSH-Key"><a href="#2-GitHub添加SSH-Key" class="headerlink" title="2.GitHub添加SSH Key"></a>2.GitHub添加SSH Key</h2><p>settings-&gt;SSH and GPG keys-&gt;New SSH key,<br>title随意，key则填写id_rsa.pub中的内容。<br><img src="https://upload-images.jianshu.io/upload_images/20609583-34d6b263e5105822.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GitHub添加SSHKey.png"></p><h1 id="Hexo本地博客搭建"><a href="#Hexo本地博客搭建" class="headerlink" title="Hexo本地博客搭建"></a>Hexo本地博客搭建</h1><p>官网（ <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a> ），官方文档较为详细，可先自行阅读后再进行搭建工作。</p><h2 id="1-框架搭建"><a href="#1-框架搭建" class="headerlink" title="1.框架搭建"></a>1.框架搭建</h2><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ D:</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>以上命令是在D盘初始化了一个blog文件夹，该文件夹存放的是Hexo静态资源。<br>使用命令行界面进入D:\blog，执行“hexo server”，使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到我们搭建的博客网站。</p><h2 id="2-主题替换以及相关配置文件修改"><a href="#2-主题替换以及相关配置文件修改" class="headerlink" title="2.主题替换以及相关配置文件修改"></a>2.主题替换以及相关配置文件修改</h2><p>从官网下载自己心仪的主题，解压缩放置到<code>D:\blog\themes\</code>目录下。<br>更改根目录下的_config.yml文件，修改theme后面的值为刚才解压缩的文件夹名。重新执行“hexo server”，刷新浏览器会发现博客网站主题已经改变。<br>配置文件已经插件的下载安装，请自行查阅官网文档以及主题的帮助文档。不在此做过多介绍。</p><h1 id="本地博客发布至GitHub"><a href="#本地博客发布至GitHub" class="headerlink" title="本地博客发布至GitHub"></a>本地博客发布至GitHub</h1><p>在GitHub上新建仓库，名称格式为“【你的GitHub昵称】.github.io”。<br>更改根目录下的_config.yml文件，修改deploy后面的内容。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> [<span class="string">你的仓库地址</span>]</span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>使用命令行界面进入D:\blog，执行如下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>至此，静态博客网站搭建完成。</p><blockquote><p>实际上在搭建过程中，遇到了不少问题，并没有上述那么顺利。本文仅作流程参考，如果在搭建过程中遇到了其他问题，还请自行百度解决。<br>后续几篇文章我将分享下我在搭建过程中遇到的一些问题以及相应的解决办法，供大家参考。</p></blockquote>]]></content>
    
    
    <summary type="html">博客搭建</summary>
    
    
    
    <category term="博客搭建" scheme="https://born2do.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="GitHub" scheme="https://born2do.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://born2do.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="https://born2do.github.io/2021/03/02/Welcome-to-my-blog/"/>
    <id>https://born2do.github.io/2021/03/02/Welcome-to-my-blog/</id>
    <published>2021-03-02T02:00:00.000Z</published>
    <updated>2021-03-02T14:30:28.350Z</updated>
    
    <content type="html"><![CDATA[<p>博客建设，从CSDN到GitHub到博客园再到GitHub，从hexo到hugo再到hexo，最终还是选择了 Github+Hexo的方式来搭建自己的博客。<br>兜兜转转，还是她。<br>原因如下：</p><ul><li>使用gitpage搭建静态网站的成本为0 。</li><li>使用Hexo生成静态网站，简单、方便、美观。</li><li>Github+Hexo的搭建模式较为常见、流行，遇到问题了，网络上的解决办法比较多。</li></ul><p>后续我会将其他网站上的博客逐步迁移至GitHub上，只在该网站上进行博客的发布。网址：<a href="https://born2do.github.io/">https://born2do.github.io</a><br>并非大神，不喜勿喷。若博客有不到位之处，还烦请指正，感谢！！！</p>]]></content>
    
    
    <summary type="html">Welcome to my blog</summary>
    
    
    
    
  </entry>
  
</feed>
